{"title":"JDBC加载数据库驱动","slug":"JDBC加载数据库驱动","date":"2021-12-29T08:48:14.000Z","updated":"2022-01-05T02:52:12.075Z","comments":true,"path":"api/articles/JDBC加载数据库驱动.json","realPath":null,"excerpt":null,"covers":null,"cover":"/images/theme/coverphoto/JDBC数据库驱动.jpg","content":"<blockquote>\n<p>My day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.</p>\n<p>我的白昼已经完了，我象一只泊在海滩上的小船，谛听着晚潮跳舞的乐声。</p>\n</blockquote>\n<h2 id=\"JDBC基本使用\"><a href=\"#JDBC基本使用\" class=\"headerlink\" title=\"JDBC基本使用\"></a>JDBC基本使用</h2><p>Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的<a href=\"https://baike.baidu.com/item/应用程序接口/10418844\">应用程序接口</a>，提供了诸如查询和更新数据库中数据的方法。JDBC也是Sun Microsystems的商标。我们通常说的JDBC是面向关系型数据库的。</p>\n<p>导入<code>mysql-connector-java-版本.jar</code>,然后将jar包添加入项目库中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> ClassNotFoundException, SQLException </span>&#123;<br>        <span class=\"hljs-comment\">//固定写法，加载驱动 Mysql 8.0以上</span><br>        Class.forName(<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class=\"hljs-comment\">//2.用户信息和url</span><br>        String url = <span class=\"hljs-string\">&quot;jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&quot;</span>;<br>        String username = <span class=\"hljs-string\">&quot;用户名&quot;</span>;  <span class=\"hljs-comment\">//数据库用户名</span><br>        String password = <span class=\"hljs-string\">&quot;密码&quot;</span>;<span class=\"hljs-comment\">//数据库密码</span><br><br>        Connection connection = DriverManager.getConnection(url,username,password);<br>  <br>\t\t\t\t<span class=\"hljs-comment\">//执行SQL的对象 statement</span><br>        Statement statement = connection.createStatement();<br>\t\t\t\t<span class=\"hljs-comment\">//sql语句</span><br>        String sql = <span class=\"hljs-string\">&quot;SELECT * FROM 数据库名.表名&quot;</span>;<br>  \t\t\t<span class=\"hljs-comment\">//执行sql</span><br>        ResultSet resultSet = statement.executeQuery(sql);<br><br>  \t\t\t<span class=\"hljs-comment\">//从获取的结果中输出</span><br>        <span class=\"hljs-keyword\">while</span> (resultSet.next())&#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;variable=&quot;</span>+ resultSet.getObject(<span class=\"hljs-string\">&quot;列名&quot;</span>));<br>        &#125;<br>\t\t\t<br>  \t\t\t<span class=\"hljs-comment\">//依次关闭连接</span><br>        resultSet.close();<br>        statement.close();<br>        connection.close();<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"驱动\"><a href=\"#驱动\" class=\"headerlink\" title=\"驱动\"></a><strong>驱动</strong></h4><p><code>com.mysql.cj.jdbc.Driver</code>部分源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Driver</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">NonRegisteringDriver</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">sql</span>.<span class=\"hljs-title\">Driver</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Driver</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>    &#125;<br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            DriverManager.registerDriver(<span class=\"hljs-keyword\">new</span> Driver());<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException var1) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">&quot;Can&#x27;t register driver!&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//DriverManager.registerDriver(new Driver());   不推荐使用</span><br><span class=\"hljs-comment\">//因为Drive类中静态代码块中已经注册了</span><br><span class=\"hljs-comment\">//固定写法，加载驱动 Mysql 8.0以上</span><br>Class.forName(<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);   <span class=\"hljs-comment\">//推荐</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a><strong>URL</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">String url = <span class=\"hljs-string\">&quot;jdbc:mysql://主机地址:3306/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&quot;</span>;<br><br>mysql -- <span class=\"hljs-number\">3306</span><br>oralce -- <span class=\"hljs-number\">1521</span><br>jdbc:oralce:thin:<span class=\"hljs-meta\">@localhost</span>:<span class=\"hljs-number\">1521</span>:sid<br></code></pre></td></tr></table></figure>\n<h4 id=\"Connection\"><a href=\"#Connection\" class=\"headerlink\" title=\"Connection\"></a><strong>Connection</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">Connection connection = DriverManager.getConnection(url,username,password);<br></code></pre></td></tr></table></figure>\n<p><code>connection</code>代表数据库，是数据库的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">connection.rollback();<br>connection.commit();<br>connection.setAutoCommit();<br></code></pre></td></tr></table></figure>\n<h4 id=\"Statement\"><a href=\"#Statement\" class=\"headerlink\" title=\"Statement\"></a><strong>Statement</strong></h4><p>不能防止sql注入<a href=\"#PreparedStatement\"><code>点击跳转PreparedStatement</code></a></p>\n<p><code>statement</code> 具体的执行类，是执行sql的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">statement.executeQuery();  <span class=\"hljs-comment\">//查询操作返回ResultSet</span><br>statement.execute();   <span class=\"hljs-comment\">//查询任何sql</span><br>statement.executeUpdate();  <span class=\"hljs-comment\">//更新 插入  删除  返回一个受影响的行数</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"ResultSet\"><a href=\"#ResultSet\" class=\"headerlink\" title=\"ResultSet\"></a><strong>ResultSet</strong></h4><p><code>resultSet</code> 查询的结果集，封装了所有的结果集</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">resultSet.getObject();   <span class=\"hljs-comment\">//在不知道列类型的情况下使用</span><br>resultSet.getString();<br>resultSet.getInt();<br><br>resultSet.beforeFirst();  <span class=\"hljs-comment\">//移动到最前面</span><br>resultSet.afterLast();  <span class=\"hljs-comment\">//移动到最后面</span><br>resultSet.next();  <span class=\"hljs-comment\">//移动到下一个数据</span><br>resultSet.previous();  <span class=\"hljs-comment\">//移动到前一行</span><br>resultSet.absolute(row);  <span class=\"hljs-comment\">//移动到制定行</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"释放资源\"><a href=\"#释放资源\" class=\"headerlink\" title=\"释放资源\"></a><strong>释放资源</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">resultSet.close();<br>statement.close();<br>connection.close();<br></code></pre></td></tr></table></figure>\n<h2 id=\"提取工具类\"><a href=\"#提取工具类\" class=\"headerlink\" title=\"提取工具类\"></a>提取工具类</h2><p>创建<code>db.properties</code>配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-attr\">driver</span> = <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span> = <span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span> = <span class=\"hljs-string\">密码</span><br></code></pre></td></tr></table></figure>\n<p><strong>通过反射获取类加载器来拿到资源</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.io.IOException;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><span class=\"hljs-keyword\">import</span> java.util.Properties;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JdbcUtils</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String driver = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String url = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String username = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String password = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span>&#123;<br>            <span class=\"hljs-comment\">//通过反射获取类加载器来拿到资源（mysql配置文件），返回一个输入流</span><br>            InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;db.properties&quot;</span>);<br>            Properties properties = <span class=\"hljs-keyword\">new</span> Properties();<br>            <span class=\"hljs-comment\">//将配置文件读出</span><br>            properties.load(in);<br>\t\t\t\t\t\t<br>            driver = properties.getProperty(<span class=\"hljs-string\">&quot;driver&quot;</span>);<br>            url = properties.getProperty(<span class=\"hljs-string\">&quot;url&quot;</span>);<br>            username = properties.getProperty(<span class=\"hljs-string\">&quot;username&quot;</span>);<br>            password = properties.getProperty(<span class=\"hljs-string\">&quot;password&quot;</span>);<br><br>            <span class=\"hljs-comment\">//驱动只用加载一次</span><br>            Class.forName(driver);<br><br>        &#125;<span class=\"hljs-keyword\">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>  <br>    <span class=\"hljs-comment\">//获取连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Connection <span class=\"hljs-title\">getConnection</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>        <span class=\"hljs-keyword\">return</span> DriverManager.getConnection(url,username,password);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//释放连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">release</span><span class=\"hljs-params\">(Connection conn, Statement st, ResultSet rs)</span></span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(rs!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                rs.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(st!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                st.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(conn!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                conn.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>Class是当前类的Class对象，Class.getClassLoader()是获取当前类的类加载器。类加载器的大概作用是当需要使用一个类时，加载该类的”.class”文件，并创建对应的class对象，将class文件加载到虚拟机的内存。getResourceAsStream()是获取资源的输入流。类加载器默认是从classPath路径加载资源。</p>\n<p>因此，当使用<code>Class.getClassLoader.getResourceAsStream()</code>加载资源时，是从classPath路径下进行加载，放在resources下的文件加载时不能加（“/”）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p><code>Class.getResourceAsStream()</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//当前类的URI目录，不包括自己</span><br>Class.getResourceAsStream(<span class=\"hljs-string\">&quot;&quot;</span>);<br><span class=\"hljs-comment\">//当前的classpath的绝对URI路径</span><br>Class.getResourceAsStream(<span class=\"hljs-string\">&quot;/&quot;</span>);<br></code></pre></td></tr></table></figure>\n<p>在使用 Class.getResourceAsStream()时，一定注意要加载的资源路径与当前类所在包的路径是否一致【使用时注意子目录】。</p>\n<p>1）要加载的资源路径与当前类所在包的路径一致</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getResourceAsStream(<span class=\"hljs-string\">&quot;xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n<p>2）要加载的资源路径在resources下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getResourceAsStream(<span class=\"hljs-string\">&quot;/xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>提取插入类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.sql.Connection;<br><span class=\"hljs-keyword\">import</span> java.sql.ResultSet;<br><span class=\"hljs-keyword\">import</span> java.sql.SQLException;<br><span class=\"hljs-keyword\">import</span> java.sql.Statement;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestInsert</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>\t\t\t\t<span class=\"hljs-comment\">//提高作用域</span><br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        Statement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();    <span class=\"hljs-comment\">//获取数据库连接</span><br>            st = conn.createStatement();    <span class=\"hljs-comment\">//获得sql的执行对象</span><br>            String sql = <span class=\"hljs-string\">&quot;插入的sql语句&quot;</span>;<br><br>            <span class=\"hljs-keyword\">int</span> i = st.executeUpdate(sql);<br>            <span class=\"hljs-keyword\">if</span> (i&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                System.out.println(<span class=\"hljs-string\">&quot;插入成功&quot;</span>);<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;\t<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"SQL注入问题\"><a href=\"#SQL注入问题\" class=\"headerlink\" title=\"SQL注入问题\"></a>SQL注入问题</h2><p>SQL注入即是指<a href=\"https://baike.baidu.com/item/web应用程序/2498090\">web应用程序</a>对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的<a href=\"https://baike.baidu.com/item/SQL语句/5714895\">SQL语句</a>，在管理员不知情的情况下实现非法操作，以此来实现欺骗<a href=\"https://baike.baidu.com/item/数据库服务器/613818\">数据库服务器</a>执行非授权的任意查询，从而进一步得到相应的数据信息。</p>\n<p><strong>注入实例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.sql.Connection;<br><span class=\"hljs-keyword\">import</span> java.sql.ResultSet;<br><span class=\"hljs-keyword\">import</span> java.sql.SQLException;<br><span class=\"hljs-keyword\">import</span> java.sql.Statement;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SQL</span>注入 </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br><span class=\"hljs-comment\">//        login(&quot;bobobobo&quot;,&quot;123123&quot;);</span><br>        login(<span class=\"hljs-string\">&quot;&#x27;or&#x27;1=1&quot;</span>,<span class=\"hljs-string\">&quot;&#x27;or&#x27;1=1&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//登陆业务</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">(String username,String password)</span></span>&#123;<br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        Statement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();<br>            st = conn.createStatement();<br>            <br>            <span class=\"hljs-comment\">//select * from users where `NAME` = &#x27;&#x27; or &#x27;1=1&#x27; and `password` = &#x27;&#x27; or &#x27;1=1&#x27;</span><br>            String sql = <span class=\"hljs-string\">&quot;select * from users where `NAME`=&#x27;&quot;</span> + username + <span class=\"hljs-string\">&quot;&#x27; AND  `password` = &#x27;&quot;</span> + password + <span class=\"hljs-string\">&quot;&#x27;&quot;</span>;<br>            rs = st.executeQuery(sql);<br><br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                    System.out.println(<span class=\"hljs-string\">&quot;查询成功&quot;</span>);<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;NAME&quot;</span>));<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;password&quot;</span>));<br>            &#125;<br><br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>login()</code>方法传递进去的参数会被拼接入sql语句中，称为执行sql语句的一部分，使sql语句保持正确的语法，进而被执行；</p>\n<h3 id=\"PreparedStatement\"><a href=\"#PreparedStatement\" class=\"headerlink\" title=\"PreparedStatement\"></a>PreparedStatement</h3><p><a href=\"#Statement\"><code>点击跳转Statement</code></a></p>\n<p>PreparedStatement可以防止sql注入，效率更好</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> com.bobo.lesson02.utils.JdbcUtils;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SQL</span>注入 </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        login(<span class=\"hljs-string\">&quot;&#x27;&#x27; or 1=1&quot;</span>,<span class=\"hljs-string\">&quot;123123&quot;</span>);  <span class=\"hljs-comment\">//防止sql注入</span><br>    &#125;<br><br>    <span class=\"hljs-comment\">//登陆业务</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">(String username,String password)</span></span>&#123;<br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        PreparedStatement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();<br><br>\t\t\t\t\t\t<span class=\"hljs-comment\">//区别</span><br>            <span class=\"hljs-comment\">//使用 ？占位符  代替参数</span><br>            <span class=\"hljs-comment\">//把传递进来的参数当作字符  假设其中存在转义字符 直接忽略 &#x27; 会被直接转义</span><br>            String sql = <span class=\"hljs-string\">&quot;select * from users where `NAME`= ? and `password` = ?&quot;</span>;<br>\t\t\t\t\t\t<br>          \t<span class=\"hljs-comment\">//预编译sql语句</span><br>            st = conn.prepareStatement(sql);<br>          \t<br>          \t<span class=\"hljs-comment\">//从1开始，1代表第一个占位符 ？ 以此类推，填入参数</span><br>            st.setString(<span class=\"hljs-number\">1</span>,username);<br>            st.setString(<span class=\"hljs-number\">2</span>,password);<br><br>          \t<span class=\"hljs-comment\">//与之前不同，不需要sql参数，因为之前已经进行过预编译，直接执行对象</span><br>            rs = st.executeQuery();<br><br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                    System.out.println(<span class=\"hljs-string\">&quot;查询成功&quot;</span>);<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;NAME&quot;</span>));<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;password&quot;</span>));<br>            &#125;<br><br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>login()</code>传递进来的参数会被当作字符串，只相当于参数，而不是sql执行语句中的一部分，字符串的转义字符会被忽略，无法创造满足的条件。</p>\n<h2 id=\"数据库连接池\"><a href=\"#数据库连接池\" class=\"headerlink\" title=\"数据库连接池\"></a>数据库连接池</h2><h3 id=\"池化技术\"><a href=\"#池化技术\" class=\"headerlink\" title=\"池化技术\"></a>池化技术</h3><p><strong>概念</strong></p>\n<p>池化技术：把一些能够复用的东西（比如说数据库连接、线程）放到池中，避免重复创建、销毁的开销，从而极大提高性能。</p>\n<p>在开发过程中我们会用到很多的连接池，像是数据库连接池、HTTP 连接池、Redis 连接池等等。而连接池的管理是连接池设计的核心，我就以数据库连接池为例，来说明一下连接池管理的关键点。</p>\n<p><strong>数据库连接池</strong></p>\n<p>数据库连接池有两个最重要的配置：最小连接数和最大连接数，它们控制着从连接池中获取连接的流程：</p>\n<ul>\n<li>如果当前连接数小于最小连接数，则创建新的连接处理数据库请求</li>\n<li>如果线程池中有空闲连接，则使用空闲连接</li>\n<li>如果没有空闲连接，并且当前连接数小于最大连接数，则继续创建新的连接</li>\n<li>如果当前连接数大于等于最大连接数，并且没有空闲连接了，则请求按照超时时间等待旧连接可用。、</li>\n<li>超时之后，则获取数据库连接失败</li>\n</ul>\n<p>对于数据库连接池，根据我的经验，一般在线上我建议最小连接数控制在 10 左右，最大连接数控制在 20～30 左右即可。</p>\n<h3 id=\"IDEA使用DBCP连接池\"><a href=\"#IDEA使用DBCP连接池\" class=\"headerlink\" title=\"IDEA使用DBCP连接池\"></a>IDEA使用DBCP连接池</h3><p>导入<code>commons-dbcp-版本号.jar</code> <code>commons-pool-版本号.jar</code> ,然后将jar包添加入项目库中</p>\n<p>DBCP2还需要导入<code>commons-logging-版本号.jar</code></p>\n<p><strong>提取工具类</strong></p>\n<p>创建<code>dbcpconfig.properties</code>配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-comment\">#连接设置</span><br><span class=\"hljs-attr\">driverClassName</span> = <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span> = <span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span> = <span class=\"hljs-string\">密码</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#初始化连接</span><br><span class=\"hljs-attr\">initialSize</span>=<span class=\"hljs-string\">10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最大连接数量</span><br><span class=\"hljs-attr\">maxActive</span>=<span class=\"hljs-string\">50</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最大空闲连接</span><br><span class=\"hljs-attr\">maxIdle</span>=<span class=\"hljs-string\">20</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最小空闲连接</span><br><span class=\"hljs-attr\">minIdle</span>=<span class=\"hljs-string\">5</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#超时等待时间以毫秒为单位 6000毫秒/1000等于60秒</span><br><span class=\"hljs-attr\">maxWait</span>=<span class=\"hljs-string\">60000</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：[属性名=property;]</span><br><span class=\"hljs-comment\">#注意：“user” 与 “password” 两个属性会被明确地传递，因此这里不需要包含他们。</span><br><span class=\"hljs-attr\">connectionProperties</span>=<span class=\"hljs-string\">useUnicode=true;characterEncoding=UTF8</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span><br><span class=\"hljs-attr\">defaultAutoCommit</span>=<span class=\"hljs-string\">true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span><br><span class=\"hljs-comment\">#如果没有设置该值，则&quot;setReadOnly&quot;方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span><br><span class=\"hljs-attr\">defaultReadOnly</span>=<span class=\"hljs-string\"></span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span><br><span class=\"hljs-comment\">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span><br><span class=\"hljs-attr\">defaultTransactionIsolation</span>=<span class=\"hljs-string\">READ_UNCOMMITTED</span><br></code></pre></td></tr></table></figure>\n<p><strong>DBCP工具类</strong> </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.dbcp2.BasicDataSource;<br><span class=\"hljs-keyword\">import</span> org.apache.commons.dbcp2.BasicDataSourceFactory;<br><span class=\"hljs-keyword\">import</span> javax.sql.DataSource;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><span class=\"hljs-keyword\">import</span> java.util.Properties;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JdbcUtils_DBCP</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> DataSource dataSource = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span>&#123;<br>            InputStream in = JdbcUtils_DBCP.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;dbcpconfig.properties&quot;</span>);<br>            Properties properties = <span class=\"hljs-keyword\">new</span> Properties();<br>            properties.load(in);<br><br>            <span class=\"hljs-comment\">//创建数据源   工厂模式 =》创建对象   返回一个数据源</span><br>            dataSource = BasicDataSourceFactory.createDataSource(properties);<br><br>        &#125;<span class=\"hljs-keyword\">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//获取连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Connection <span class=\"hljs-title\">getConnection</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>      \t<span class=\"hljs-comment\">//数据源中自带连接，自动连接</span><br>        <span class=\"hljs-keyword\">return</span> dataSource.getConnection();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//释放连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">release</span><span class=\"hljs-params\">(Connection conn, Statement st, ResultSet rs)</span></span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(rs!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                rs.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(st!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                st.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(conn!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                conn.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n","more":"<blockquote>\n<p>My day is done, and I am like a boat drawn on the beach, listening to the dance-music of the tide in the evening.</p>\n<p>我的白昼已经完了，我象一只泊在海滩上的小船，谛听着晚潮跳舞的乐声。</p>\n</blockquote>\n<h2 id=\"JDBC基本使用\"><a href=\"#JDBC基本使用\" class=\"headerlink\" title=\"JDBC基本使用\"></a>JDBC基本使用</h2><p>Java数据库连接，（Java Database Connectivity，简称JDBC）是Java语言中用来规范客户端程序如何来访问数据库的<a href=\"https://baike.baidu.com/item/应用程序接口/10418844\">应用程序接口</a>，提供了诸如查询和更新数据库中数据的方法。JDBC也是Sun Microsystems的商标。我们通常说的JDBC是面向关系型数据库的。</p>\n<p>导入<code>mysql-connector-java-版本.jar</code>,然后将jar包添加入项目库中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> ClassNotFoundException, SQLException </span>&#123;<br>        <span class=\"hljs-comment\">//固定写法，加载驱动 Mysql 8.0以上</span><br>        Class.forName(<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        <span class=\"hljs-comment\">//2.用户信息和url</span><br>        String url = <span class=\"hljs-string\">&quot;jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&quot;</span>;<br>        String username = <span class=\"hljs-string\">&quot;用户名&quot;</span>;  <span class=\"hljs-comment\">//数据库用户名</span><br>        String password = <span class=\"hljs-string\">&quot;密码&quot;</span>;<span class=\"hljs-comment\">//数据库密码</span><br><br>        Connection connection = DriverManager.getConnection(url,username,password);<br>  <br>\t\t\t\t<span class=\"hljs-comment\">//执行SQL的对象 statement</span><br>        Statement statement = connection.createStatement();<br>\t\t\t\t<span class=\"hljs-comment\">//sql语句</span><br>        String sql = <span class=\"hljs-string\">&quot;SELECT * FROM 数据库名.表名&quot;</span>;<br>  \t\t\t<span class=\"hljs-comment\">//执行sql</span><br>        ResultSet resultSet = statement.executeQuery(sql);<br><br>  \t\t\t<span class=\"hljs-comment\">//从获取的结果中输出</span><br>        <span class=\"hljs-keyword\">while</span> (resultSet.next())&#123;<br>            System.out.println(<span class=\"hljs-string\">&quot;variable=&quot;</span>+ resultSet.getObject(<span class=\"hljs-string\">&quot;列名&quot;</span>));<br>        &#125;<br>\t\t\t<br>  \t\t\t<span class=\"hljs-comment\">//依次关闭连接</span><br>        resultSet.close();<br>        statement.close();<br>        connection.close();<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"驱动\"><a href=\"#驱动\" class=\"headerlink\" title=\"驱动\"></a><strong>驱动</strong></h4><p><code>com.mysql.cj.jdbc.Driver</code>部分源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Driver</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">NonRegisteringDriver</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">java</span>.<span class=\"hljs-title\">sql</span>.<span class=\"hljs-title\">Driver</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">Driver</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>    &#125;<br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            DriverManager.registerDriver(<span class=\"hljs-keyword\">new</span> Driver());<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException var1) &#123;<br>            <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> RuntimeException(<span class=\"hljs-string\">&quot;Can&#x27;t register driver!&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//DriverManager.registerDriver(new Driver());   不推荐使用</span><br><span class=\"hljs-comment\">//因为Drive类中静态代码块中已经注册了</span><br><span class=\"hljs-comment\">//固定写法，加载驱动 Mysql 8.0以上</span><br>Class.forName(<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);   <span class=\"hljs-comment\">//推荐</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a><strong>URL</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">String url = <span class=\"hljs-string\">&quot;jdbc:mysql://主机地址:3306/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&quot;</span>;<br><br>mysql -- <span class=\"hljs-number\">3306</span><br>oralce -- <span class=\"hljs-number\">1521</span><br>jdbc:oralce:thin:<span class=\"hljs-meta\">@localhost</span>:<span class=\"hljs-number\">1521</span>:sid<br></code></pre></td></tr></table></figure>\n<h4 id=\"Connection\"><a href=\"#Connection\" class=\"headerlink\" title=\"Connection\"></a><strong>Connection</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">Connection connection = DriverManager.getConnection(url,username,password);<br></code></pre></td></tr></table></figure>\n<p><code>connection</code>代表数据库，是数据库的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">connection.rollback();<br>connection.commit();<br>connection.setAutoCommit();<br></code></pre></td></tr></table></figure>\n<h4 id=\"Statement\"><a href=\"#Statement\" class=\"headerlink\" title=\"Statement\"></a><strong>Statement</strong></h4><p>不能防止sql注入<a href=\"#PreparedStatement\"><code>点击跳转PreparedStatement</code></a></p>\n<p><code>statement</code> 具体的执行类，是执行sql的对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">statement.executeQuery();  <span class=\"hljs-comment\">//查询操作返回ResultSet</span><br>statement.execute();   <span class=\"hljs-comment\">//查询任何sql</span><br>statement.executeUpdate();  <span class=\"hljs-comment\">//更新 插入  删除  返回一个受影响的行数</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"ResultSet\"><a href=\"#ResultSet\" class=\"headerlink\" title=\"ResultSet\"></a><strong>ResultSet</strong></h4><p><code>resultSet</code> 查询的结果集，封装了所有的结果集</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">resultSet.getObject();   <span class=\"hljs-comment\">//在不知道列类型的情况下使用</span><br>resultSet.getString();<br>resultSet.getInt();<br><br>resultSet.beforeFirst();  <span class=\"hljs-comment\">//移动到最前面</span><br>resultSet.afterLast();  <span class=\"hljs-comment\">//移动到最后面</span><br>resultSet.next();  <span class=\"hljs-comment\">//移动到下一个数据</span><br>resultSet.previous();  <span class=\"hljs-comment\">//移动到前一行</span><br>resultSet.absolute(row);  <span class=\"hljs-comment\">//移动到制定行</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"释放资源\"><a href=\"#释放资源\" class=\"headerlink\" title=\"释放资源\"></a><strong>释放资源</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">resultSet.close();<br>statement.close();<br>connection.close();<br></code></pre></td></tr></table></figure>\n<h2 id=\"提取工具类\"><a href=\"#提取工具类\" class=\"headerlink\" title=\"提取工具类\"></a>提取工具类</h2><p>创建<code>db.properties</code>配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-attr\">driver</span> = <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span> = <span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span> = <span class=\"hljs-string\">密码</span><br></code></pre></td></tr></table></figure>\n<p><strong>通过反射获取类加载器来拿到资源</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.io.IOException;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><span class=\"hljs-keyword\">import</span> java.util.Properties;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JdbcUtils</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String driver = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String url = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String username = <span class=\"hljs-keyword\">null</span>;<br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> String password = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span>&#123;<br>            <span class=\"hljs-comment\">//通过反射获取类加载器来拿到资源（mysql配置文件），返回一个输入流</span><br>            InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;db.properties&quot;</span>);<br>            Properties properties = <span class=\"hljs-keyword\">new</span> Properties();<br>            <span class=\"hljs-comment\">//将配置文件读出</span><br>            properties.load(in);<br>\t\t\t\t\t\t<br>            driver = properties.getProperty(<span class=\"hljs-string\">&quot;driver&quot;</span>);<br>            url = properties.getProperty(<span class=\"hljs-string\">&quot;url&quot;</span>);<br>            username = properties.getProperty(<span class=\"hljs-string\">&quot;username&quot;</span>);<br>            password = properties.getProperty(<span class=\"hljs-string\">&quot;password&quot;</span>);<br><br>            <span class=\"hljs-comment\">//驱动只用加载一次</span><br>            Class.forName(driver);<br><br>        &#125;<span class=\"hljs-keyword\">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>  <br>    <span class=\"hljs-comment\">//获取连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Connection <span class=\"hljs-title\">getConnection</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>        <span class=\"hljs-keyword\">return</span> DriverManager.getConnection(url,username,password);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//释放连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">release</span><span class=\"hljs-params\">(Connection conn, Statement st, ResultSet rs)</span></span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(rs!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                rs.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(st!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                st.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(conn!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                conn.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>Class是当前类的Class对象，Class.getClassLoader()是获取当前类的类加载器。类加载器的大概作用是当需要使用一个类时，加载该类的”.class”文件，并创建对应的class对象，将class文件加载到虚拟机的内存。getResourceAsStream()是获取资源的输入流。类加载器默认是从classPath路径加载资源。</p>\n<p>因此，当使用<code>Class.getClassLoader.getResourceAsStream()</code>加载资源时，是从classPath路径下进行加载，放在resources下的文件加载时不能加（“/”）。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n<blockquote>\n<p><code>Class.getResourceAsStream()</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//当前类的URI目录，不包括自己</span><br>Class.getResourceAsStream(<span class=\"hljs-string\">&quot;&quot;</span>);<br><span class=\"hljs-comment\">//当前的classpath的绝对URI路径</span><br>Class.getResourceAsStream(<span class=\"hljs-string\">&quot;/&quot;</span>);<br></code></pre></td></tr></table></figure>\n<p>在使用 Class.getResourceAsStream()时，一定注意要加载的资源路径与当前类所在包的路径是否一致【使用时注意子目录】。</p>\n<p>1）要加载的资源路径与当前类所在包的路径一致</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getResourceAsStream(<span class=\"hljs-string\">&quot;xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n<p>2）要加载的资源路径在resources下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">InputStream in = PropertiesUtil.class.getResourceAsStream(<span class=\"hljs-string\">&quot;/xx.properties&quot;</span>);<br></code></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>提取插入类</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.sql.Connection;<br><span class=\"hljs-keyword\">import</span> java.sql.ResultSet;<br><span class=\"hljs-keyword\">import</span> java.sql.SQLException;<br><span class=\"hljs-keyword\">import</span> java.sql.Statement;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">TestInsert</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>\t\t\t\t<span class=\"hljs-comment\">//提高作用域</span><br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        Statement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();    <span class=\"hljs-comment\">//获取数据库连接</span><br>            st = conn.createStatement();    <span class=\"hljs-comment\">//获得sql的执行对象</span><br>            String sql = <span class=\"hljs-string\">&quot;插入的sql语句&quot;</span>;<br><br>            <span class=\"hljs-keyword\">int</span> i = st.executeUpdate(sql);<br>            <span class=\"hljs-keyword\">if</span> (i&gt;<span class=\"hljs-number\">0</span>)&#123;<br>                System.out.println(<span class=\"hljs-string\">&quot;插入成功&quot;</span>);<br>            &#125;<br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;\t<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"SQL注入问题\"><a href=\"#SQL注入问题\" class=\"headerlink\" title=\"SQL注入问题\"></a>SQL注入问题</h2><p>SQL注入即是指<a href=\"https://baike.baidu.com/item/web应用程序/2498090\">web应用程序</a>对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的<a href=\"https://baike.baidu.com/item/SQL语句/5714895\">SQL语句</a>，在管理员不知情的情况下实现非法操作，以此来实现欺骗<a href=\"https://baike.baidu.com/item/数据库服务器/613818\">数据库服务器</a>执行非授权的任意查询，从而进一步得到相应的数据信息。</p>\n<p><strong>注入实例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.sql.Connection;<br><span class=\"hljs-keyword\">import</span> java.sql.ResultSet;<br><span class=\"hljs-keyword\">import</span> java.sql.SQLException;<br><span class=\"hljs-keyword\">import</span> java.sql.Statement;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SQL</span>注入 </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br><span class=\"hljs-comment\">//        login(&quot;bobobobo&quot;,&quot;123123&quot;);</span><br>        login(<span class=\"hljs-string\">&quot;&#x27;or&#x27;1=1&quot;</span>,<span class=\"hljs-string\">&quot;&#x27;or&#x27;1=1&quot;</span>);<br>    &#125;<br><br>    <span class=\"hljs-comment\">//登陆业务</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">(String username,String password)</span></span>&#123;<br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        Statement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();<br>            st = conn.createStatement();<br>            <br>            <span class=\"hljs-comment\">//select * from users where `NAME` = &#x27;&#x27; or &#x27;1=1&#x27; and `password` = &#x27;&#x27; or &#x27;1=1&#x27;</span><br>            String sql = <span class=\"hljs-string\">&quot;select * from users where `NAME`=&#x27;&quot;</span> + username + <span class=\"hljs-string\">&quot;&#x27; AND  `password` = &#x27;&quot;</span> + password + <span class=\"hljs-string\">&quot;&#x27;&quot;</span>;<br>            rs = st.executeQuery(sql);<br><br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                    System.out.println(<span class=\"hljs-string\">&quot;查询成功&quot;</span>);<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;NAME&quot;</span>));<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;password&quot;</span>));<br>            &#125;<br><br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>login()</code>方法传递进去的参数会被拼接入sql语句中，称为执行sql语句的一部分，使sql语句保持正确的语法，进而被执行；</p>\n<h3 id=\"PreparedStatement\"><a href=\"#PreparedStatement\" class=\"headerlink\" title=\"PreparedStatement\"></a>PreparedStatement</h3><p><a href=\"#Statement\"><code>点击跳转Statement</code></a></p>\n<p>PreparedStatement可以防止sql注入，效率更好</p>\n<p><strong>实例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> com.bobo.lesson02.utils.JdbcUtils;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">SQL</span>注入 </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        login(<span class=\"hljs-string\">&quot;&#x27;&#x27; or 1=1&quot;</span>,<span class=\"hljs-string\">&quot;123123&quot;</span>);  <span class=\"hljs-comment\">//防止sql注入</span><br>    &#125;<br><br>    <span class=\"hljs-comment\">//登陆业务</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">login</span><span class=\"hljs-params\">(String username,String password)</span></span>&#123;<br>        Connection conn = <span class=\"hljs-keyword\">null</span>;<br>        PreparedStatement st = <span class=\"hljs-keyword\">null</span>;<br>        ResultSet rs = <span class=\"hljs-keyword\">null</span>;<br><br>        <span class=\"hljs-keyword\">try</span> &#123;<br>            conn = JdbcUtils.getConnection();<br><br>\t\t\t\t\t\t<span class=\"hljs-comment\">//区别</span><br>            <span class=\"hljs-comment\">//使用 ？占位符  代替参数</span><br>            <span class=\"hljs-comment\">//把传递进来的参数当作字符  假设其中存在转义字符 直接忽略 &#x27; 会被直接转义</span><br>            String sql = <span class=\"hljs-string\">&quot;select * from users where `NAME`= ? and `password` = ?&quot;</span>;<br>\t\t\t\t\t\t<br>          \t<span class=\"hljs-comment\">//预编译sql语句</span><br>            st = conn.prepareStatement(sql);<br>          \t<br>          \t<span class=\"hljs-comment\">//从1开始，1代表第一个占位符 ？ 以此类推，填入参数</span><br>            st.setString(<span class=\"hljs-number\">1</span>,username);<br>            st.setString(<span class=\"hljs-number\">2</span>,password);<br><br>          \t<span class=\"hljs-comment\">//与之前不同，不需要sql参数，因为之前已经进行过预编译，直接执行对象</span><br>            rs = st.executeQuery();<br><br>            <span class=\"hljs-keyword\">while</span>(rs.next())&#123;<br>                    System.out.println(<span class=\"hljs-string\">&quot;查询成功&quot;</span>);<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;NAME&quot;</span>));<br>                    System.out.println(rs.getString(<span class=\"hljs-string\">&quot;password&quot;</span>));<br>            &#125;<br><br>        &#125; <span class=\"hljs-keyword\">catch</span> (SQLException throwables) &#123;<br>            throwables.printStackTrace();<br>        &#125;<span class=\"hljs-keyword\">finally</span> &#123;<br>            JdbcUtils.release(conn,st,rs);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p><code>login()</code>传递进来的参数会被当作字符串，只相当于参数，而不是sql执行语句中的一部分，字符串的转义字符会被忽略，无法创造满足的条件。</p>\n<h2 id=\"数据库连接池\"><a href=\"#数据库连接池\" class=\"headerlink\" title=\"数据库连接池\"></a>数据库连接池</h2><h3 id=\"池化技术\"><a href=\"#池化技术\" class=\"headerlink\" title=\"池化技术\"></a>池化技术</h3><p><strong>概念</strong></p>\n<p>池化技术：把一些能够复用的东西（比如说数据库连接、线程）放到池中，避免重复创建、销毁的开销，从而极大提高性能。</p>\n<p>在开发过程中我们会用到很多的连接池，像是数据库连接池、HTTP 连接池、Redis 连接池等等。而连接池的管理是连接池设计的核心，我就以数据库连接池为例，来说明一下连接池管理的关键点。</p>\n<p><strong>数据库连接池</strong></p>\n<p>数据库连接池有两个最重要的配置：最小连接数和最大连接数，它们控制着从连接池中获取连接的流程：</p>\n<ul>\n<li>如果当前连接数小于最小连接数，则创建新的连接处理数据库请求</li>\n<li>如果线程池中有空闲连接，则使用空闲连接</li>\n<li>如果没有空闲连接，并且当前连接数小于最大连接数，则继续创建新的连接</li>\n<li>如果当前连接数大于等于最大连接数，并且没有空闲连接了，则请求按照超时时间等待旧连接可用。、</li>\n<li>超时之后，则获取数据库连接失败</li>\n</ul>\n<p>对于数据库连接池，根据我的经验，一般在线上我建议最小连接数控制在 10 左右，最大连接数控制在 20～30 左右即可。</p>\n<h3 id=\"IDEA使用DBCP连接池\"><a href=\"#IDEA使用DBCP连接池\" class=\"headerlink\" title=\"IDEA使用DBCP连接池\"></a>IDEA使用DBCP连接池</h3><p>导入<code>commons-dbcp-版本号.jar</code> <code>commons-pool-版本号.jar</code> ,然后将jar包添加入项目库中</p>\n<p>DBCP2还需要导入<code>commons-logging-版本号.jar</code></p>\n<p><strong>提取工具类</strong></p>\n<p>创建<code>dbcpconfig.properties</code>配置文件</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-comment\">#连接设置</span><br><span class=\"hljs-attr\">driverClassName</span> = <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span> = <span class=\"hljs-string\">jdbc:mysql://localhost:端口/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span> = <span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span> = <span class=\"hljs-string\">密码</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#初始化连接</span><br><span class=\"hljs-attr\">initialSize</span>=<span class=\"hljs-string\">10</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最大连接数量</span><br><span class=\"hljs-attr\">maxActive</span>=<span class=\"hljs-string\">50</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最大空闲连接</span><br><span class=\"hljs-attr\">maxIdle</span>=<span class=\"hljs-string\">20</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#最小空闲连接</span><br><span class=\"hljs-attr\">minIdle</span>=<span class=\"hljs-string\">5</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#超时等待时间以毫秒为单位 6000毫秒/1000等于60秒</span><br><span class=\"hljs-attr\">maxWait</span>=<span class=\"hljs-string\">60000</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#JDBC驱动建立连接时附带的连接属性属性的格式必须为这样：[属性名=property;]</span><br><span class=\"hljs-comment\">#注意：“user” 与 “password” 两个属性会被明确地传递，因此这里不需要包含他们。</span><br><span class=\"hljs-attr\">connectionProperties</span>=<span class=\"hljs-string\">useUnicode=true;characterEncoding=UTF8</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#指定由连接池所创建的连接的自动提交（auto-commit）状态。</span><br><span class=\"hljs-attr\">defaultAutoCommit</span>=<span class=\"hljs-string\">true</span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#driver default 指定由连接池所创建的连接的只读（read-only）状态。</span><br><span class=\"hljs-comment\">#如果没有设置该值，则&quot;setReadOnly&quot;方法将不被调用。（某些驱动并不支持只读模式，如：Informix）</span><br><span class=\"hljs-attr\">defaultReadOnly</span>=<span class=\"hljs-string\"></span><br><span class=\"hljs-comment\"></span><br><span class=\"hljs-comment\">#driver default 指定由连接池所创建的连接的事务级别（TransactionIsolation）。</span><br><span class=\"hljs-comment\">#可用值为下列之一：（详情可见javadoc。）NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE</span><br><span class=\"hljs-attr\">defaultTransactionIsolation</span>=<span class=\"hljs-string\">READ_UNCOMMITTED</span><br></code></pre></td></tr></table></figure>\n<p><strong>DBCP工具类</strong> </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> org.apache.commons.dbcp2.BasicDataSource;<br><span class=\"hljs-keyword\">import</span> org.apache.commons.dbcp2.BasicDataSourceFactory;<br><span class=\"hljs-keyword\">import</span> javax.sql.DataSource;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><span class=\"hljs-keyword\">import</span> java.sql.*;<br><span class=\"hljs-keyword\">import</span> java.util.Properties;<br><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JdbcUtils_DBCP</span> </span>&#123;<br><br>    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> DataSource dataSource = <span class=\"hljs-keyword\">null</span>;<br><br>    <span class=\"hljs-keyword\">static</span> &#123;<br>        <span class=\"hljs-keyword\">try</span>&#123;<br>            InputStream in = JdbcUtils_DBCP.class.getClassLoader().getResourceAsStream(<span class=\"hljs-string\">&quot;dbcpconfig.properties&quot;</span>);<br>            Properties properties = <span class=\"hljs-keyword\">new</span> Properties();<br>            properties.load(in);<br><br>            <span class=\"hljs-comment\">//创建数据源   工厂模式 =》创建对象   返回一个数据源</span><br>            dataSource = BasicDataSourceFactory.createDataSource(properties);<br><br>        &#125;<span class=\"hljs-keyword\">catch</span> (Exception e)&#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//获取连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Connection <span class=\"hljs-title\">getConnection</span><span class=\"hljs-params\">()</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>&#123;<br>      \t<span class=\"hljs-comment\">//数据源中自带连接，自动连接</span><br>        <span class=\"hljs-keyword\">return</span> dataSource.getConnection();<br>    &#125;<br><br>    <span class=\"hljs-comment\">//释放连接</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">release</span><span class=\"hljs-params\">(Connection conn, Statement st, ResultSet rs)</span></span>&#123;<br>        <span class=\"hljs-keyword\">if</span>(rs!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                rs.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(st!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                st.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span>(conn!=<span class=\"hljs-keyword\">null</span>)&#123;<br>            <span class=\"hljs-keyword\">try</span>&#123;<br>                conn.close();<br>            &#125;<span class=\"hljs-keyword\">catch</span> (SQLException e)&#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"Mysql","path":"api/categories/Mysql.json"},{"name":"JDBC","path":"api/categories/JDBC.json"},{"name":"JDBC","path":"api/categories/JDBC.json"}],"tags":[{"name":"Mysql,JDBC,Java","path":"api/tags/Mysql,JDBC,Java.json"}]}