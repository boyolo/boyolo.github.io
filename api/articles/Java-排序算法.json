{"title":"Java 排序算法","slug":"Java-排序算法","date":"2021-12-13T02:15:47.000Z","updated":"2022-03-22T11:02:13.410Z","comments":true,"path":"api/articles/Java-排序算法.json","realPath":null,"excerpt":null,"covers":["/article/50722/sort.png","/article/50722/bubbleSort.gif","/article/50722/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.gif","/article/50722/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.gif","/article/50722/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.gif","/article/50722/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif","/article/50722/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.jpg","/article/50722/%E5%A0%86%E6%8E%92%E5%BA%8F.gif","/article/50722/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F.gif","/article/50722/1c950a7b02087bf4562d34cf54939c2410dfcf98.jpeg","/article/50722/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F.gif"],"cover":"/images/theme/coverphoto/Java排序算法.jpg","content":"<blockquote>\n<p>The mystery of creation is like the darkness of night–it is great.</p>\n<p>Delusions of knowledge are like the fog of the morning.</p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/l199616j/p/10742603.html#_label0_0\">https://www.cnblogs.com/l199616j/p/10742603.html#_label0_0</a></p>\n<img src=\"/article/50722/sort.png\" class title=\"sort\">\n<h2 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h2><h3 id=\"算法步骤\"><a href=\"#算法步骤\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h3><ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们的位置；</li>\n<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数；</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个；</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<img src=\"/article/50722/bubbleSort.gif\" class title=\"bubbleSort\">\n<h3 id=\"Java算法实现\"><a href=\"#Java算法实现\" class=\"headerlink\" title=\"Java算法实现\"></a>Java算法实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span>[] bubbleSort(<span class=\"hljs-keyword\">int</span>[] array)&#123;<br>  <span class=\"hljs-comment\">//外层循环 判断循环走多少次</span><br>  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.length - <span class=\"hljs-number\">1</span>; i++)&#123;<br>    <span class=\"hljs-comment\">//比较相邻的元素。如果第一个比第二个大，就交换他们的位置</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; array.length - <span class=\"hljs-number\">1</span> - i; j++)&#123;<br>      <span class=\"hljs-keyword\">if</span>(array[j+<span class=\"hljs-number\">1</span>] &lt; array[j])&#123;<br>        <span class=\"hljs-keyword\">int</span> temp = array[j];<br>        array[j] = array[j+<span class=\"hljs-number\">1</span>];<br>        array[j+<span class=\"hljs-number\">1</span>] = temp;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> array;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"算法增加标志位改进\"><a href=\"#算法增加标志位改进\" class=\"headerlink\" title=\"算法增加标志位改进\"></a>算法增加标志位改进</h4><ul>\n<li>增加标志位，减少没有意义的比较</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span>[] bubbleSort(<span class=\"hljs-keyword\">int</span>[] array)&#123;<br>  <span class=\"hljs-comment\">//外层循环 判断循环走多少次</span><br>  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.length - <span class=\"hljs-number\">1</span>; i++)&#123;<br>    <span class=\"hljs-comment\">//设定一个标记，若为true，则表示此次循环没有进行交换，也就是待排序列已经有序，排序已经完成</span><br>    <span class=\"hljs-keyword\">boolean</span> flag = <span class=\"hljs-keyword\">true</span>;<br>    <span class=\"hljs-comment\">//比较相邻的元素。如果第一个比第二个大，就交换他们的位置</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; array.length - <span class=\"hljs-number\">1</span> - i; j++)&#123;<br>      <span class=\"hljs-keyword\">if</span>(array[j+<span class=\"hljs-number\">1</span>] &lt; array[j])&#123;<br>        <span class=\"hljs-keyword\">int</span> temp = array[j];<br>        array[j] = array[j+<span class=\"hljs-number\">1</span>];<br>        array[j+<span class=\"hljs-number\">1</span>] = temp;<br>        <span class=\"hljs-comment\">//相邻数字排序完成后，置为true</span><br>        flag = <span class=\"hljs-keyword\">false</span>;<br>      &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//如果其中一轮完全没有进入第二次循环中的置换顺序，说明没有需要置换的相邻元素，那么说明已经不需要再次进行排序，flag为true，可以直接跳出循环</span><br>    <span class=\"hljs-keyword\">if</span>(flag)&#123;<br>      <span class=\"hljs-keyword\">break</span>;<br>    &#125;<br>  &#125;<br>  reyurn array;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h2><h3 id=\"算法步骤-1\"><a href=\"#算法步骤-1\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h3><ol>\n<li><p>第一个跟后面的所有数相比较，如果小于（或等于）第一个数的时候，暂存较小数的下标，第一趟结束后，将第一个数，与暂存的那个最小数进行交换，第一个数就是最小（或最大的数）</p>\n</li>\n<li><p>下标移到第二位，第二个数跟后面的所有数相比，一趟下来，确定第二小（或第二大）的数</p>\n</li>\n<li>重复以上步骤，直到指针移到倒数第二位，确定倒数第二小（或倒数第二大）的数，那么最后一位也就确定了，排序完成。</li>\n</ol>\n<img src=\"/article/50722/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h3 id=\"Java算法实现-1\"><a href=\"#Java算法实现-1\" class=\"headerlink\" title=\"Java算法实现\"></a>Java算法实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.util.Arrays;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Main</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">int</span>[] n = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[]&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">33</span>,<span class=\"hljs-number\">27</span>,<span class=\"hljs-number\">66</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">88</span>&#125;;<br>    <span class=\"hljs-keyword\">int</span> temp,index = -<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n.length-<span class=\"hljs-number\">1</span>; i++) &#123;<br>      index=i;<br>      <span class=\"hljs-comment\">//如果大于，暂存较小的数的下标</span><br>      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = i+<span class=\"hljs-number\">1</span>; j &lt;n.length; j++) &#123;<br>        <span class=\"hljs-keyword\">if</span>(n[index]&gt;n[j])&#123;<br>          index = j;<br>        &#125;<br>      &#125;<br>      <span class=\"hljs-comment\">////将一趟下来求出的最小数，与这个数交换</span><br>      <span class=\"hljs-keyword\">if</span>(index&gt;<span class=\"hljs-number\">0</span>)&#123;<br>        temp = n[i];<br>        n[i] = n[index];<br>        n[index] = temp;<br>      &#125;<br>      System.out.println(Arrays.toString(n));<br>    &#125;<br>    System.out.println(Arrays.toString(n));<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h2><img src=\"/article/50722/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h2><img src=\"/article/50722/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h2><img src=\"/article/50722/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h2><img src=\"/article/50722/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.jpg\" class title=\"img\">\n<h2 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h2><img src=\"/article/50722/%E5%A0%86%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"计数排序\"><a href=\"#计数排序\" class=\"headerlink\" title=\"计数排序\"></a>计数排序</h2><img src=\"/article/50722/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"桶排序\"><a href=\"#桶排序\" class=\"headerlink\" title=\"桶排序\"></a>桶排序</h2><img src=\"/article/50722/1c950a7b02087bf4562d34cf54939c2410dfcf98.jpeg\" class title=\"img\">\n<h2 id=\"基数排序\"><a href=\"#基数排序\" class=\"headerlink\" title=\"基数排序\"></a>基数排序</h2><img src=\"/article/50722/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n","more":"<blockquote>\n<p>The mystery of creation is like the darkness of night–it is great.</p>\n<p>Delusions of knowledge are like the fog of the morning.</p>\n</blockquote>\n<p><a href=\"https://www.cnblogs.com/l199616j/p/10742603.html#_label0_0\">https://www.cnblogs.com/l199616j/p/10742603.html#_label0_0</a></p>\n<img src=\"/article/50722/sort.png\" class title=\"sort\">\n<h2 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h2><h3 id=\"算法步骤\"><a href=\"#算法步骤\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h3><ol>\n<li>比较相邻的元素。如果第一个比第二个大，就交换他们的位置；</li>\n<li>对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。这步做完后，最后的元素会是最大的数；</li>\n<li>针对所有的元素重复以上的步骤，除了最后一个；</li>\n<li>持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</li>\n</ol>\n<img src=\"/article/50722/bubbleSort.gif\" class title=\"bubbleSort\">\n<h3 id=\"Java算法实现\"><a href=\"#Java算法实现\" class=\"headerlink\" title=\"Java算法实现\"></a>Java算法实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span>[] bubbleSort(<span class=\"hljs-keyword\">int</span>[] array)&#123;<br>  <span class=\"hljs-comment\">//外层循环 判断循环走多少次</span><br>  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.length - <span class=\"hljs-number\">1</span>; i++)&#123;<br>    <span class=\"hljs-comment\">//比较相邻的元素。如果第一个比第二个大，就交换他们的位置</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; array.length - <span class=\"hljs-number\">1</span> - i; j++)&#123;<br>      <span class=\"hljs-keyword\">if</span>(array[j+<span class=\"hljs-number\">1</span>] &lt; array[j])&#123;<br>        <span class=\"hljs-keyword\">int</span> temp = array[j];<br>        array[j] = array[j+<span class=\"hljs-number\">1</span>];<br>        array[j+<span class=\"hljs-number\">1</span>] = temp;<br>      &#125;<br>    &#125;<br>  &#125;<br>  <span class=\"hljs-keyword\">return</span> array;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"算法增加标志位改进\"><a href=\"#算法增加标志位改进\" class=\"headerlink\" title=\"算法增加标志位改进\"></a>算法增加标志位改进</h4><ul>\n<li>增加标志位，减少没有意义的比较</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span>[] bubbleSort(<span class=\"hljs-keyword\">int</span>[] array)&#123;<br>  <span class=\"hljs-comment\">//外层循环 判断循环走多少次</span><br>  <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; array.length - <span class=\"hljs-number\">1</span>; i++)&#123;<br>    <span class=\"hljs-comment\">//设定一个标记，若为true，则表示此次循环没有进行交换，也就是待排序列已经有序，排序已经完成</span><br>    <span class=\"hljs-keyword\">boolean</span> flag = <span class=\"hljs-keyword\">true</span>;<br>    <span class=\"hljs-comment\">//比较相邻的元素。如果第一个比第二个大，就交换他们的位置</span><br>    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt; array.length - <span class=\"hljs-number\">1</span> - i; j++)&#123;<br>      <span class=\"hljs-keyword\">if</span>(array[j+<span class=\"hljs-number\">1</span>] &lt; array[j])&#123;<br>        <span class=\"hljs-keyword\">int</span> temp = array[j];<br>        array[j] = array[j+<span class=\"hljs-number\">1</span>];<br>        array[j+<span class=\"hljs-number\">1</span>] = temp;<br>        <span class=\"hljs-comment\">//相邻数字排序完成后，置为true</span><br>        flag = <span class=\"hljs-keyword\">false</span>;<br>      &#125;<br>    &#125;<br>    <span class=\"hljs-comment\">//如果其中一轮完全没有进入第二次循环中的置换顺序，说明没有需要置换的相邻元素，那么说明已经不需要再次进行排序，flag为true，可以直接跳出循环</span><br>    <span class=\"hljs-keyword\">if</span>(flag)&#123;<br>      <span class=\"hljs-keyword\">break</span>;<br>    &#125;<br>  &#125;<br>  reyurn array;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h2><h3 id=\"算法步骤-1\"><a href=\"#算法步骤-1\" class=\"headerlink\" title=\"算法步骤\"></a>算法步骤</h3><ol>\n<li><p>第一个跟后面的所有数相比较，如果小于（或等于）第一个数的时候，暂存较小数的下标，第一趟结束后，将第一个数，与暂存的那个最小数进行交换，第一个数就是最小（或最大的数）</p>\n</li>\n<li><p>下标移到第二位，第二个数跟后面的所有数相比，一趟下来，确定第二小（或第二大）的数</p>\n</li>\n<li>重复以上步骤，直到指针移到倒数第二位，确定倒数第二小（或倒数第二大）的数，那么最后一位也就确定了，排序完成。</li>\n</ol>\n<img src=\"/article/50722/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h3 id=\"Java算法实现-1\"><a href=\"#Java算法实现-1\" class=\"headerlink\" title=\"Java算法实现\"></a>Java算法实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">import</span> java.util.Arrays;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Main</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    <span class=\"hljs-keyword\">int</span>[] n = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[]&#123;<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">8</span>,<span class=\"hljs-number\">33</span>,<span class=\"hljs-number\">27</span>,<span class=\"hljs-number\">66</span>,<span class=\"hljs-number\">9</span>,<span class=\"hljs-number\">7</span>,<span class=\"hljs-number\">88</span>&#125;;<br>    <span class=\"hljs-keyword\">int</span> temp,index = -<span class=\"hljs-number\">1</span>;<br>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; n.length-<span class=\"hljs-number\">1</span>; i++) &#123;<br>      index=i;<br>      <span class=\"hljs-comment\">//如果大于，暂存较小的数的下标</span><br>      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">int</span> j = i+<span class=\"hljs-number\">1</span>; j &lt;n.length; j++) &#123;<br>        <span class=\"hljs-keyword\">if</span>(n[index]&gt;n[j])&#123;<br>          index = j;<br>        &#125;<br>      &#125;<br>      <span class=\"hljs-comment\">////将一趟下来求出的最小数，与这个数交换</span><br>      <span class=\"hljs-keyword\">if</span>(index&gt;<span class=\"hljs-number\">0</span>)&#123;<br>        temp = n[i];<br>        n[i] = n[index];<br>        n[index] = temp;<br>      &#125;<br>      System.out.println(Arrays.toString(n));<br>    &#125;<br>    System.out.println(Arrays.toString(n));<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h2 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h2><img src=\"/article/50722/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"希尔排序\"><a href=\"#希尔排序\" class=\"headerlink\" title=\"希尔排序\"></a>希尔排序</h2><img src=\"/article/50722/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h2><img src=\"/article/50722/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h2><img src=\"/article/50722/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F.jpg\" class title=\"img\">\n<h2 id=\"堆排序\"><a href=\"#堆排序\" class=\"headerlink\" title=\"堆排序\"></a>堆排序</h2><img src=\"/article/50722/%E5%A0%86%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"计数排序\"><a href=\"#计数排序\" class=\"headerlink\" title=\"计数排序\"></a>计数排序</h2><img src=\"/article/50722/%E8%AE%A1%E6%95%B0%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n<h2 id=\"桶排序\"><a href=\"#桶排序\" class=\"headerlink\" title=\"桶排序\"></a>桶排序</h2><img src=\"/article/50722/1c950a7b02087bf4562d34cf54939c2410dfcf98.jpeg\" class title=\"img\">\n<h2 id=\"基数排序\"><a href=\"#基数排序\" class=\"headerlink\" title=\"基数排序\"></a>基数排序</h2><img src=\"/article/50722/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F.gif\" class title=\"img\">\n","categories":[{"name":"语言","path":"api/categories/语言.json"},{"name":"Java","path":"api/categories/Java.json"},{"name":"Java","path":"api/categories/Java.json"},{"name":"排序","path":"api/categories/排序.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"}]}