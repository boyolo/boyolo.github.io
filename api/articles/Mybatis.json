{"title":"Mybatis","slug":"Mybatis","date":"2022-01-07T08:48:46.000Z","updated":"2022-01-12T07:02:54.539Z","comments":true,"path":"api/articles/Mybatis.json","realPath":null,"excerpt":null,"covers":["/article/13919/image-20220108215520312.png"],"cover":"/images/theme/coverphoto/Mybatis.jpg","content":"<blockquote>\n<p>The woodcutter’s axe begged for its handle from the tree.<br>The tree gave it.</p>\n<p>樵夫的斧头，问树要斧柄。　　　　　　　　　　　　　　　　　　<br>树便给了他。</p>\n</blockquote>\n<h2 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h2><p><a href=\"https://github.com/mybatis\">点击跳转Mybatis-Github官方</a></p>\n<p><code>MyBatis</code> 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，是一个基于Java的持久层框架。</p>\n<ul>\n<li><strong>持久层：</strong> 可以将业务数据<strong>存储到磁盘，具备长期存储能力</strong>，只要磁盘不损坏，在断电或者其他情况下，重新开启系统仍然可以读取到这些数据。</li>\n<li><strong>优点：</strong> 可以<strong>使用巨大的磁盘空间</strong>存储相当量的数据，并且很<strong>廉价</strong></li>\n<li><strong>缺点：慢</strong>（相对于内存而言）</li>\n</ul>\n<p><strong>为什么使用 MyBatis</strong></p>\n<p>在我们<strong>传统的 JDBC 中</strong>，我们除了需要自己提供 SQL 外，还必须操作 Connection、Statment、ResultSet，不仅如此，为了访问不同的表，不同字段的数据，我们需要些很多雷同模板化的代码，闲的<strong>繁琐又枯燥</strong>。</p>\n<p>而我们在使用了 <strong>MyBatis</strong> 之后，<strong>只需要提供 SQL 语句就好了</strong>，其余的诸如：建立连接、操作 Statment、ResultSet，处理 JDBC 相关异常等等都可以交给 MyBatis 去处理，我们的<strong>关注点于是可以就此集中在 SQL 语句上</strong>，关注在增删改查这些操作层面上。</p>\n<p>并且 MyBatis 支持使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li>\n<li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li>\n<li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li>\n<li>提供映射标签，支持对象与数据库的orm字段关系映射</li>\n<li>提供对象关系映射标签，支持对象关系组建维护</li>\n<li>提供xml标签，支持编写动态sql。 </li>\n</ul>\n<h3 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h3><p>创建maven项目，配置<code>pom.xml</code>依赖包</p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis_Maven环境配置\">点击跳转Mybatis_Maven环境配置</a>\n<p><a href=\"https://mybatis.org/mybatis-3/zh/index.html\">Mybaitis官方中文配置文件</a></p>\n<p><strong>从 XML 中构建 SqlSessionFactory</strong></p>\n<p>每个基于 MyBatis 的应用都是以一个 <code>SqlSessionFactory</code> 的实例为核心的。SqlSessionFactory 的实例可以通过 <code>SqlSessionFactoryBuilder</code> 获得。而 SqlSessionFactoryBuilder 则可以从 <code>XML</code> 配置文件或一个预先配置的 Configuration 实例来构建出 SqlSessionFactory 实例。</p>\n<p>在<code>rescouces</code>文件下创建<code>mybatis-config.xml</code>配置文件</p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis_XML环境配置\">点击跳转Mybatis_XML环境配置</a>\n<p><strong>例</strong></p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis环境配置\">点击跳转Mybatis环境配置</a>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">configuration</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-keyword\">PUBLIC</span> <span class=\"hljs-meta-string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--核心配置文件--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environments</span> <span class=\"hljs-attr\">default</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environment</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transactionManager</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;JDBC&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dataSource</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;POOLED&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;driver&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;jdbc:mysql://localhost:3306/数据库名?useSSL=false<span class=\"hljs-symbol\">&amp;amp;</span>serverTimezone=UTC<span class=\"hljs-symbol\">&amp;amp;</span>characterEncoding=utf8<span class=\"hljs-symbol\">&amp;amp;</span>useUnicode=true&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;用户名&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;密码&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dataSource</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environment</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environments</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p><strong>封装工具类</strong></p>\n<p>获取sqlSessionFactory对象，从sqlSessionFactory中获取SqlSession</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.utils;<br><br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.io.Resources;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSession;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;<br><span class=\"hljs-keyword\">import</span> java.io.IOException;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><br><span class=\"hljs-comment\">//sqlSessionFaction  --&gt; sqlSession</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MybatisUtils</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> SqlSessionFactory sqlSessionFactory;<br>  <span class=\"hljs-keyword\">static</span> &#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      <span class=\"hljs-comment\">//使用Mybatis的第一步：获取sqlSessionFactory对象</span><br>      String resource = <span class=\"hljs-string\">&quot;mybatis-config.xml&quot;</span>;<br>      InputStream inputStream = Resources.getResourceAsStream(resource);<br>      sqlSessionFactory = <span class=\"hljs-keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);<br>    &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>      e.printStackTrace();<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-comment\">//既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。</span><br>  <span class=\"hljs-comment\">// SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。</span><br>  <span class=\"hljs-comment\">// 你可以通过 SqlSession 实例来直接执行已映射的 SQL 语句。</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> SqlSession <span class=\"hljs-title\">getSqlSession</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-keyword\">return</span> sqlSessionFactory.openSession();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"优化配置\"><a href=\"#优化配置\" class=\"headerlink\" title=\"优化配置\"></a>优化配置</h4><p><strong>引入配置文件</strong></p>\n<blockquote>\n<p>通过<code>propertise</code>配置文件实现引用</p>\n<p><code>db.properties</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-attr\">driver</span>=<span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">jdbc:mysql://localhost:3306/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span>=<span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span>=<span class=\"hljs-string\">密码</span><br></code></pre></td></tr></table></figure>\n<p><code>mybatis-config.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--导入配置--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;db.properties&quot;</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--当在这里配置属性时，优先使用外部配置文件--&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environments</span> <span class=\"hljs-attr\">default</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environment</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transactionManager</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;JDBC&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dataSource</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;POOLED&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;driver&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dataSource</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environment</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environments</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载：</p>\n<ul>\n<li>首先读取在 properties 元素体内指定的属性。</li>\n<li>然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。</li>\n<li>最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。</li>\n</ul>\n<p>因此，通过方法参数传递的属性具有最高优先级，resource/url 属性中指定的配置文件次之，最低优先级的则是 properties 元素中指定的属性。</p>\n</blockquote>\n<p><strong>配置别名</strong></p>\n<blockquote>\n<p>类型别名可为 Java 类型设置一个缩写名字。 它仅用于 XML 配置，意在降低冗余的全限定类名书写。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--别名</span><br><span class=\"hljs-comment\">    用来减少完全限定名的冗余</span><br><span class=\"hljs-comment\">--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">typeAliases</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--方法一：可以给实体类其别名--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">typeAlias</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo.User&quot;</span> <span class=\"hljs-attr\">alias</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">typeAlias</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">\t\t方法二：</span><br><span class=\"hljs-comment\">    指定一个包名，Mybatis会在包名下搜索所需要的JavaBean</span><br><span class=\"hljs-comment\">    扫描实体类的包，它的默认别名就是这个类的类名</span><br><span class=\"hljs-comment\">\t\t在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名</span><br><span class=\"hljs-comment\">    也可以在实体类上增加注解</span><br><span class=\"hljs-comment\">    --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">package</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">typeAliases</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--方法一--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><br>    select * from mybatis.user<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--方法二--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;user&quot;</span>&gt;</span><br>    select * from mybatis.user<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>设置（settings）</strong></p>\n<table>\n<thead>\n<tr>\n<th>设置名</th>\n<th>描述</th>\n<th>有效值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cacheEnabled</td>\n<td>全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</td>\n<td>true \\</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td>mapUnderscoreToCamelCase</td>\n<td>是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。</td>\n<td>true \\</td>\n<td>false</td>\n<td>False</td>\n</tr>\n<tr>\n<td>logImpl</td>\n<td>指定 MyBatis 所用日志的具体实现，未指定时将自动查找。</td>\n<td>SLF4J \\</td>\n<td>LOG4J(deprecated since 3.5.9) \\</td>\n<td>LOG4J2 \\</td>\n<td>JDK_LOGGING \\</td>\n<td>COMMONS_LOGGING \\</td>\n<td>STDOUT_LOGGING \\</td>\n<td>NO_LOGGING</td>\n<td>未设置</td>\n</tr>\n<tr>\n<td>lazyLoadingEnabled</td>\n<td>延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 <code>fetchType</code> 属性来覆盖该项的开关状态。</td>\n<td>true \\</td>\n<td>false</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p><strong>映射器（mappers）</strong></p>\n<p>可以使用相对于类路径的资源引用，或完全限定资源定位符（包括 <code>file:///</code> 形式的 URL），或类名和包名等告诉 MyBatis 到哪里去找映射文件.</p>\n<blockquote>\n<p>方式一：resource<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;org/mybatis/builder/AuthorMapper.xml&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure><br>方式二：class<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure></p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>接口和Mapper配置文件必须同名</li>\n<li>接口和Mapper配置文件必须在同一个包下</li>\n</ol>\n<p>方式三：package</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">package</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;org.mybatis.builder&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"编写程序\"><a href=\"#编写程序\" class=\"headerlink\" title=\"编写程序\"></a>编写程序</h3><p>MyBatis 提供的所有特性都可以利用基于 XML 的映射语言来实现，这使得 MyBatis 在过去的数年间得以流行</p>\n<img src=\"/article/13919/image-20220108215520312.png\" class title=\"image-20220108215520312\">\n<p><strong>例</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">mapper</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-keyword\">PUBLIC</span> <span class=\"hljs-meta-string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--命名空间  绑定一个对应的Mapper接口--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">namespace</span>=<span class=\"hljs-string\">&quot;com.bobo.Mapper.UserMapper&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">id:对应的namespace中的方法名</span><br><span class=\"hljs-comment\">resultType：SQL语句执行的返回值</span><br><span class=\"hljs-comment\">parameterType：参数类型</span><br><span class=\"hljs-comment\">--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo.User&quot;</span>&gt;</span><br>        select * from mybatis.user<br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>与之对应的是</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.User;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.Map;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">UserMapper</span></span>&#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> 查询全部用户</span><br><span class=\"hljs-comment\">     * 得到用户列表</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\">List&lt;User&gt; <span class=\"hljs-title\">getUserList</span><span class=\"hljs-params\">()</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>绑定</p>\n<p>每一个<code>Mapper.XML</code>都需要在Mybatis核心配置文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--每一个Mapper.XML都需要在Mybatis核心配置文件中注册--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;com/bobo/dao/UserMapper.xml&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>如果绑定失败，可能是资源目录没有导出成功,<a href=\"/article/37040.html\" title=\"点击跳转Maven资源导出配置\">点击跳转Maven资源导出配置</a></p>\n<p>测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.User;<br><span class=\"hljs-keyword\">import</span> com.bobo.utils.MybatisUtils;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSession;<br><span class=\"hljs-keyword\">import</span> org.junit.Test;<br><span class=\"hljs-keyword\">import</span> java.util.HashMap;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.Map;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserMapperTest</span></span>&#123;<br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//1.获得SqlSession对象</span><br>        SqlSession sqlSession = MybatisUtils.getSqlSession();<br>        <span class=\"hljs-comment\">//方式一：getMapper</span><br>        UserMapper mapper = sqlSession.getMapper(UserMapper.class);<br>        List&lt;User&gt; userList = mapper.getUserList();<br><br>        <span class=\"hljs-comment\">//方式二：</span><br><span class=\"hljs-comment\">//        List&lt;User&gt; userList = sqlSession.selectList(&quot;com.bobo.dao.UserMapper.getUserList&quot;);</span><br>        <span class=\"hljs-keyword\">for</span> (User user : userList) &#123;<br>            System.out.println(user);<br>        &#125;<br><br>        <span class=\"hljs-comment\">//关闭SqlSession</span><br>        sqlSession.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p><strong>注意：</strong>增删改需要提交事务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//提交事务</span><br>        sqlSession.commit();<br>        sqlSession.close();<br></code></pre></td></tr></table></figure>\n<h3 id=\"对命名空间的一点补充\"><a href=\"#对命名空间的一点补充\" class=\"headerlink\" title=\"对命名空间的一点补充\"></a><strong>对命名空间的一点补充</strong></h3><p>在之前版本的 MyBatis 中，<strong>命名空间（Namespaces）</strong>的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。</p>\n<p>命名空间的作用有两个，一个是利用更长的全限定名来将不同的语句隔离开来，同时也实现了你上面见到的接口绑定。就算你觉得暂时用不到接口绑定，你也应该遵循这里的规定，以防哪天你改变了主意。 长远来看，只要将命名空间置于合适的 Java 包命名空间之中，你的代码会变得更加整洁，也有利于你更方便地使用 MyBatis。</p>\n<p><strong>命名解析：</strong>为了减少输入量，MyBatis 对所有具有名称的配置元素（包括语句，结果映射，缓存等）使用了如下的命名解析规则。</p>\n<ol>\n<li><p>全限定名（比如 “com.mypackage.MyMapper.selectAllThings）将被直接用于查找及使用。</p>\n</li>\n<li><p>短名称（比如 “selectAllThings”）如果全局唯一也可以作为一个单独的引用。 如果不唯一，有两个或两个以上的相同名称（比如 “com.foo.selectAllThings” 和 “com.bar.selectAllThings”），那么使用时就会产生“短名称不唯一”的错误，这种情况下就必须使用全限定名。</p>\n</li>\n</ol>\n<h3 id=\"作用域（Scope）和生命周期\"><a href=\"#作用域（Scope）和生命周期\" class=\"headerlink\" title=\"作用域（Scope）和生命周期\"></a>作用域（Scope）和生命周期</h3><p><strong>对象生命周期和依赖注入框架</strong></p>\n<p>依赖注入框架可以创建线程安全的、基于事务的 SqlSession 和映射器，并将它们直接注入到你的 bean 中，因此可以直接忽略它们的生命周期。</p>\n<ol>\n<li><p><strong>SqlSessionFactoryBuilder</strong></p>\n<p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但最好还是不要一直保留着它，以保证所有的 XML 解析资源可以被释放给更重要的事情。</p>\n</li>\n<li><p><strong>SqlSessionFactory</strong></p>\n<p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。  SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。</p>\n</li>\n<li><p><strong>SqlSession</strong></p>\n<p>每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。  <strong>绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中。</strong></p>\n</li>\n</ol>\n<h3 id=\"XML-映射文件\"><a href=\"#XML-映射文件\" class=\"headerlink\" title=\"XML 映射文件\"></a>XML 映射文件</h3><ul>\n<li><code>cache</code> – 该命名空间的缓存配置。</li>\n<li><code>cache-ref</code> – 引用其它命名空间的缓存配置。</li>\n<li><code>resultMap</code> – 描述如何从数据库结果集中加载对象，是最复杂也是最强大的元素。</li>\n<li><code>resultType</code> - 期望从这条语句中返回结果的类全限定名或别名。 注意，如果返回的是集合，那应该设置为集合包含的类型，而不是集合本身的类型。 resultType 和 resultMap 之间只能同时使用一个。</li>\n<li><del>parameterMap</del> – 老式风格的参数映射。此元素已被废弃，并可能在将来被移除！请使用行内参数映射。</li>\n<li><code>parameterType</code> - 将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</li>\n<li><code>sql</code> – 可被其它语句引用的可重用语句块。</li>\n<li><code>insert</code> – 映射插入语句。</li>\n<li><code>update</code> – 映射更新语句。</li>\n<li><code>delete</code> – 映射删除语句。</li>\n<li><code>select</code> – 映射查询语句</li>\n</ul>\n<p><strong>结果映射</strong></p>\n<p><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC <code>ResultSets</code> 数据提取代码中解放出来，并在一些情形下允许你进行一些 JDBC 不支持的操作。</p>\n<p>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</p>\n<p>举例<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;userResultMap&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;user_id&quot;</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;user_name&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;hashed_password&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;selectUsers&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;userResultMap&quot;</span>&gt;</span><br>  select user_id, user_name, hashed_password<br>  from some_table<br>  where id = #&#123;id&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>复杂查询</strong></p>\n<ol>\n<li><p>多对一查询（多个同学对应一个老师）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.pojo;<br><span class=\"hljs-keyword\">import</span> lombok.Data;<br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> id;<br>  <span class=\"hljs-keyword\">private</span> String name;<br>  <span class=\"hljs-comment\">//学生要关联一个老师</span><br>  <span class=\"hljs-keyword\">private</span> Teacher teacher;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Student;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">StudentMapper</span> </span>&#123;<br>  <span class=\"hljs-comment\">//查询所有的学生信息，以及对应的老师的信息</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Student&gt; <span class=\"hljs-title\">getStudent</span><span class=\"hljs-params\">()</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>方法一：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--思路：</span><br><span class=\"hljs-comment\">1。查询所有学生信息</span><br><span class=\"hljs-comment\">2。根据查询出来的学生的tid 寻找对应的老师</span><br><span class=\"hljs-comment\">--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudent&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span>&gt;</span><br>  select * from student<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;name&quot;</span>/&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--复杂的属性需要单独处理</span><br><span class=\"hljs-comment\">       对象：association</span><br><span class=\"hljs-comment\">       集合：collection</span><br><span class=\"hljs-comment\"> javaType 指定的属性类型</span><br><span class=\"hljs-comment\">--&gt;</span><br>   <br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">association</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;teacher&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span> <span class=\"hljs-attr\">select</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  select * from teacher where id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--按照结果集嵌套处理--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudent&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span>&gt;</span><br>  select s.id sid,s.name sname,t.name tname,t.id tid<br>  from student s,teacher t where s.tid = t.id;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sname&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">association</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;teacher&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tname&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">association</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>一对多（一个老师对应多个同学）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.pojo;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Student;<br><span class=\"hljs-keyword\">import</span> lombok.Data;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Teacher</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> id;<br>  <span class=\"hljs-keyword\">private</span> String name;<br><br>  <span class=\"hljs-comment\">//一个老师拥有多个学生</span><br>  <span class=\"hljs-keyword\">private</span> List&lt;Student&gt; students;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Teacher;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.annotations.Param;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TeacherMapper</span> </span>&#123;<br>  <span class=\"hljs-comment\">//获取所有老师</span><br>  <span class=\"hljs-comment\">//List&lt;Teacher&gt; getTeacher();</span><br>  <span class=\"hljs-comment\">//获取指定老师下的所有学生以及老师的信息</span><br>  <span class=\"hljs-function\">Teacher <span class=\"hljs-title\">getTeacher</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@Param(&quot;tid&quot;)</span> <span class=\"hljs-keyword\">int</span> id)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>方法一：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--按照结果嵌套查询--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span>&gt;</span><br>  select s.id sid, s.name sname, t.name tname, t.id tid<br>  from student s,teacher t<br>  where s.tid = t.id and t.id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tname&quot;</span>/&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--复杂的属性，我们需要单独处理</span><br><span class=\"hljs-comment\">        javaType 指定的属性类型</span><br><span class=\"hljs-comment\">        集合中的泛型信息，我们使用ofType获取</span><br><span class=\"hljs-comment\">    --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">collection</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;students&quot;</span> <span class=\"hljs-attr\">ofType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sid&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sname&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;tid&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">collection</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span>&gt;</span><br>  select * from mybatis.teacher where id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">collection</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;students&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;ArrayList&quot;</span> <span class=\"hljs-attr\">ofType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span> <span class=\"hljs-attr\">select</span>=<span class=\"hljs-string\">&quot;getStudentByTeacherId&quot;</span></span><br><span class=\"hljs-tag\">              <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudentByTeacherId&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  select *<br>  from mybatis.student where tid = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h3><p>SLF4J | <strong>LOG4J(deprecated since 3.5.9)</strong> | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | <strong>STDOUT_LOGGING</strong> | NO_LOGGING</p>\n<p><strong>STDOUT_LOGGING</strong> 标准日志输出</p>\n<p><code>mybatis-config.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--标准日志工厂实现--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;logImpl&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p><code>LOG4J(deprecated since 3.5.9)</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--LOG4J日志--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;logImpl&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;LOG4J&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>使用LOG4J需要添加propertise配置文件<code>log4j.properties</code>(直接百度)</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-meta\">log4j.rootLogger</span>=<span class=\"hljs-string\">DEBUG,console,file</span><br><br><span class=\"hljs-meta\">log4j.appender.console</span> = <span class=\"hljs-string\">org.apache.log4j.ConsoleAppender</span><br><span class=\"hljs-meta\">log4j.appender.console.Target</span> = <span class=\"hljs-string\">System.out</span><br><span class=\"hljs-meta\">log4j.appender.console.Threshold</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.appender.console.layout</span> = <span class=\"hljs-string\">org.apache.log4j.PatternLayout</span><br><span class=\"hljs-meta\">log4j.appender.console.layout.ConversionPattern</span>=<span class=\"hljs-string\">[%c]-%m%n</span><br><br><span class=\"hljs-meta\">log4j.appender.file</span> = <span class=\"hljs-string\">org.apache.log4j.RollingFileAppender</span><br><span class=\"hljs-meta\">log4j.appender.file.File</span>=<span class=\"hljs-string\">./log/bobo.log</span><br><span class=\"hljs-meta\">log4j.appender.file.MaxFileSize</span>=<span class=\"hljs-string\">10mb</span><br><span class=\"hljs-meta\">log4j.appender.file.Threshold</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.appender.file.layout</span>=<span class=\"hljs-string\">org.apache.log4j.PatternLayout</span><br><span class=\"hljs-meta\">log4j.appender.file.layout.ConversionPattern</span>=<span class=\"hljs-string\">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span><br><br><span class=\"hljs-meta\">log4j.logger.org.mybatis</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.Statement</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.ResultSet</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.PreparedStatement</span>=<span class=\"hljs-string\">DEBUG</span><br></code></pre></td></tr></table></figure>\n<p><strong>log4j使用</strong></p>\n<ol>\n<li><p>在要使用Log4j的类中，导入包<code>org.apache.log4j.Logger;</code></p>\n</li>\n<li><p>日志对象，参数为当前类的class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">static</span> Logger logger = Logger.getLogger(UserDaoTest.class);<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>日志级别</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">logger.info(<span class=\"hljs-string\">&quot;info:进入了testLog4j&quot;</span>);<br>logger.debug(<span class=\"hljs-string\">&quot;debug:进入了testLog4j&quot;</span>);<br>logger.error(<span class=\"hljs-string\">&quot;error:进入了testLog4j&quot;</span>);<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"和-的区别\"><a href=\"#和-的区别\" class=\"headerlink\" title=\"#{} 和 ${} 的区别\"></a>#{} 和 ${} 的区别</h3><p>#{}和${}这两个语法是为了动态传递参数而存在的，是Mybatis实现动态SQL的基础，总体上他们的作用是一致的（为了动态传参），但是在编译过程、是否自动加单引号、安全性、使用场景等方面有很多不同，下面详细比较两者间的区别： </p>\n<ol>\n<li><p>编译过程</p>\n<ol>\n<li><strong>#{}</strong> <strong>是</strong> <strong>占位符</strong> <strong>：动态解析 -&gt; 预编译 -&gt; 执行</strong></li>\n<li><strong>${}</strong> <strong>是</strong> <strong>拼接符</strong> <strong>：动态解析 -&gt; 编译 -&gt; 执行</strong></li>\n</ol>\n<p>预编译可以类比java类的编译，java类被编译成class文件，载入虚拟机，载入虚拟机的字节码文件可以先被编译成机器吗，那么在执行某行代码的时候就可以直接执行编译后的机器码，而不用从字节码开始编译再执行，那么执行效率就高了。这也是为啥热机状态比冷机状态可以抗更多负载的原因。</p>\n<p>sql的预编译也是一样的道理，在执行执行前就编译好，等执行时直接取编译结果去执行。省去编译时间。sql预编译后会在参数位置用<a href=\"https://so.csdn.net/so/search?q=占位符\">占位符</a>表示。 </p>\n<p>预编译：数据库驱动在发送sql和参数到DBMS之前，先对sql语句进行编译处理，之后DBMS则可以直接对sql进行处理，不需要再次编译，提高了性能。这一点mybatis 默认情况下，将对所有的 sql 进行预编译处理。</p>\n<ul>\n<li>预编译可以将多个操作步骤合并成一个步骤，一般而言，越复杂的sql，编译程度也会复杂，难度大，耗时，费性能，而预编译可以合并这些操作，预编译之后DBMS可以省去编译直接运行sql。</li>\n<li>预编译语句可以重复利用。<br>把一个 sql 预编译后产生的 PreparedStatement 对象缓存下来，下次对于同一个sql，可以直接使用这个缓存的 PreparedState 对象。</li>\n</ul>\n</li>\n<li><p>是否自动加单引号</p>\n<ol>\n<li><strong>#{}</strong> 对应的变量会自动加上单引号</li>\n<li><strong>${}</strong> 对应的变量不会加上单引号</li>\n</ol>\n</li>\n<li><p>安全性</p>\n<ol>\n<li><strong>#{} </strong>能防止sql注入</li>\n<li><strong>${}</strong> 不能防止sql注入</li>\n</ol>\n</li>\n<li><p>Mybatis默认值不同</p>\n<ol>\n<li><strong>#{}</strong> 默认值 arg0、arg1、arg2 或 0、 1</li>\n<li><strong>${}</strong> 默认值param1、param2、param3</li>\n</ol>\n</li>\n<li><p>如何选择 #{} 和 ${}</p>\n<ol>\n<li>能用 <strong>#{}</strong> 的地方就用 <strong>#{}</strong>，尽量少用 ${}</li>\n<li>表名作参数，或者order by 排序时用 <strong>${}</strong></li>\n<li>传参时参数使用<strong>@Param(“”)</strong>注解，<strong>@Param</strong>注解的作用是给参数命名，参数命名后就能根据名字得到参数值（相当于又加了一层密），正确的将参数传入sql语句中（一般通过#{}的方式，${}会有sql注入的问题）。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h3><p>使用缓存， 我们可以避免频繁的与数据库进行交互， 尤其是在查询越多、缓存命中率越高的情况下， 使用缓存对性能的提高更明显。</p>\n<p>mybatis 也提供了对缓存的支持， 分为一级缓存和二级缓存。 但是在默认的情况下， 只开启一级缓存（一级缓存是对同一个 SqlSession 而言的）。</p>\n<p><strong>缓存</strong>就是数据交换的缓冲区（称作Cache），是存贮数据（使用频繁的数据）的临时地方。当用户查询数据，首先在缓存中寻找，如果找到了则直接执行。如果找不到，则去数据库中查找。</p>\n<p>MyBatis 提供了<strong>一级缓存</strong>和<strong>二级缓存</strong>的支持，默认情况下只有一级缓存</p>\n<ol>\n<li><p><strong>一级缓存</strong>: 基于PerpetualCache 的 HashMap本地缓存，其<strong>存储作用域为</strong> <strong>Session</strong>，当 <strong>Session flush</strong> <strong>或</strong> <strong>close</strong> 之后，该<strong>Session中的所有 Cache 就将清空</strong>。</p>\n<p><strong>增删改也会刷新缓存</strong></p>\n<p><strong>手动清理缓存：</strong><code>sqlSession.clearCache();</code></p>\n</li>\n<li><p><strong>二级缓存</strong>与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap存储，不同在于其<strong>存储作用域为 Mapper(Namespace)</strong>，并且<strong>可自定义存储源</strong>，如 Ehcache。 要启用全局的二级缓存，首先开启全局缓存：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--显示的开启全剧缓存--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;cacheEnabled&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;true&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>然后只需要在你的 SQL 映射文件中添加一行：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">cache</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n<p>工作机制：</p>\n<ol>\n<li>一个会话查询一条数据，这个数据就会被放在当前会话的一级缓存中；</li>\n<li>如果当前会话关闭了，这个会话对应的一级缓存就没了；</li>\n<li>会话关闭之后，一级缓存中的数据会被保存在二级缓存中；</li>\n<li>新的会话查询消息，就会从二级缓存中获取内容；</li>\n<li>不同的mapper查出 的数据会放在自己对应的缓存（map）中</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>映射语句文件中的所有 select 语句的结果将会被缓存。</li>\n<li><strong>映射语句文件中的所有 insert、update 和 delete 语句会刷新缓存。</strong></li>\n<li>缓存会使用最近最少使用算法（LRU, Least Recently Used）算法来清除不需要的缓存。</li>\n<li>缓存不会定时进行刷新（也就是说，没有刷新间隔）。</li>\n<li>缓存会保存列表或对象（无论查询方法返回哪种）的 1024 个引用。</li>\n<li><p>缓存会被视为读/写缓存，这意味着获取到的对象并不是共享的，可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。</p>\n<p><strong>提示</strong> 缓存只作用于 cache 标签所在的映射文件中的语句。如果你混合使用 Java API 和 XML 映射文件，在共用接口中的语句将不会被默认缓存。你需要使用 @CacheNamespaceRef 注解指定缓存作用域。</p>\n<p><strong>提示</strong> 二级缓存是事务性的。这意味着，当 SqlSession 完成并提交时，或是完成并回滚，但没有执行 flushCache=true 的 insert/delete/update 语句时，缓存会获得更新。</p>\n</li>\n</ul>\n","more":"<blockquote>\n<p>The woodcutter’s axe begged for its handle from the tree.<br>The tree gave it.</p>\n<p>樵夫的斧头，问树要斧柄。　　　　　　　　　　　　　　　　　　<br>树便给了他。</p>\n</blockquote>\n<h2 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h2><p><a href=\"https://github.com/mybatis\">点击跳转Mybatis-Github官方</a></p>\n<p><code>MyBatis</code> 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis，是一个基于Java的持久层框架。</p>\n<ul>\n<li><strong>持久层：</strong> 可以将业务数据<strong>存储到磁盘，具备长期存储能力</strong>，只要磁盘不损坏，在断电或者其他情况下，重新开启系统仍然可以读取到这些数据。</li>\n<li><strong>优点：</strong> 可以<strong>使用巨大的磁盘空间</strong>存储相当量的数据，并且很<strong>廉价</strong></li>\n<li><strong>缺点：慢</strong>（相对于内存而言）</li>\n</ul>\n<p><strong>为什么使用 MyBatis</strong></p>\n<p>在我们<strong>传统的 JDBC 中</strong>，我们除了需要自己提供 SQL 外，还必须操作 Connection、Statment、ResultSet，不仅如此，为了访问不同的表，不同字段的数据，我们需要些很多雷同模板化的代码，闲的<strong>繁琐又枯燥</strong>。</p>\n<p>而我们在使用了 <strong>MyBatis</strong> 之后，<strong>只需要提供 SQL 语句就好了</strong>，其余的诸如：建立连接、操作 Statment、ResultSet，处理 JDBC 相关异常等等都可以交给 MyBatis 去处理，我们的<strong>关注点于是可以就此集中在 SQL 语句上</strong>，关注在增删改查这些操作层面上。</p>\n<p>并且 MyBatis 支持使用简单的 XML 或注解来配置和映射原生信息，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li>\n<li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li>\n<li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li>\n<li>提供映射标签，支持对象与数据库的orm字段关系映射</li>\n<li>提供对象关系映射标签，支持对象关系组建维护</li>\n<li>提供xml标签，支持编写动态sql。 </li>\n</ul>\n<h3 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h3><p>创建maven项目，配置<code>pom.xml</code>依赖包</p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis_Maven环境配置\">点击跳转Mybatis_Maven环境配置</a>\n<p><a href=\"https://mybatis.org/mybatis-3/zh/index.html\">Mybaitis官方中文配置文件</a></p>\n<p><strong>从 XML 中构建 SqlSessionFactory</strong></p>\n<p>每个基于 MyBatis 的应用都是以一个 <code>SqlSessionFactory</code> 的实例为核心的。SqlSessionFactory 的实例可以通过 <code>SqlSessionFactoryBuilder</code> 获得。而 SqlSessionFactoryBuilder 则可以从 <code>XML</code> 配置文件或一个预先配置的 Configuration 实例来构建出 SqlSessionFactory 实例。</p>\n<p>在<code>rescouces</code>文件下创建<code>mybatis-config.xml</code>配置文件</p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis_XML环境配置\">点击跳转Mybatis_XML环境配置</a>\n<p><strong>例</strong></p>\n<a href=\"/article/37040.html\" title=\"点击跳转Mybatis环境配置\">点击跳转Mybatis环境配置</a>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">configuration</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-keyword\">PUBLIC</span> <span class=\"hljs-meta-string\">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--核心配置文件--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">configuration</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environments</span> <span class=\"hljs-attr\">default</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environment</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transactionManager</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;JDBC&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dataSource</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;POOLED&quot;</span>&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;driver&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;jdbc:mysql://localhost:3306/数据库名?useSSL=false<span class=\"hljs-symbol\">&amp;amp;</span>serverTimezone=UTC<span class=\"hljs-symbol\">&amp;amp;</span>characterEncoding=utf8<span class=\"hljs-symbol\">&amp;amp;</span>useUnicode=true&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;用户名&quot;</span>/&gt;</span><br>        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;密码&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dataSource</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environment</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environments</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p><strong>封装工具类</strong></p>\n<p>获取sqlSessionFactory对象，从sqlSessionFactory中获取SqlSession</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.utils;<br><br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.io.Resources;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSession;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;<br><span class=\"hljs-keyword\">import</span> java.io.IOException;<br><span class=\"hljs-keyword\">import</span> java.io.InputStream;<br><br><span class=\"hljs-comment\">//sqlSessionFaction  --&gt; sqlSession</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MybatisUtils</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> SqlSessionFactory sqlSessionFactory;<br>  <span class=\"hljs-keyword\">static</span> &#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      <span class=\"hljs-comment\">//使用Mybatis的第一步：获取sqlSessionFactory对象</span><br>      String resource = <span class=\"hljs-string\">&quot;mybatis-config.xml&quot;</span>;<br>      InputStream inputStream = Resources.getResourceAsStream(resource);<br>      sqlSessionFactory = <span class=\"hljs-keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);<br>    &#125; <span class=\"hljs-keyword\">catch</span> (IOException e) &#123;<br>      e.printStackTrace();<br>    &#125;<br>  &#125;<br><br>  <span class=\"hljs-comment\">//既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。</span><br>  <span class=\"hljs-comment\">// SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。</span><br>  <span class=\"hljs-comment\">// 你可以通过 SqlSession 实例来直接执行已映射的 SQL 语句。</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> SqlSession <span class=\"hljs-title\">getSqlSession</span><span class=\"hljs-params\">()</span></span>&#123;<br>    <span class=\"hljs-keyword\">return</span> sqlSessionFactory.openSession();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<h4 id=\"优化配置\"><a href=\"#优化配置\" class=\"headerlink\" title=\"优化配置\"></a>优化配置</h4><p><strong>引入配置文件</strong></p>\n<blockquote>\n<p>通过<code>propertise</code>配置文件实现引用</p>\n<p><code>db.properties</code></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-attr\">driver</span>=<span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br><span class=\"hljs-attr\">url</span>=<span class=\"hljs-string\">jdbc:mysql://localhost:3306/数据库名?useSSL=false&amp;serverTimezone=UTC&amp;characterEncoding=utf8&amp;useUnicode=true</span><br><span class=\"hljs-attr\">username</span>=<span class=\"hljs-string\">用户名</span><br><span class=\"hljs-attr\">password</span>=<span class=\"hljs-string\">密码</span><br></code></pre></td></tr></table></figure>\n<p><code>mybatis-config.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--导入配置--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;db.properties&quot;</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--当在这里配置属性时，优先使用外部配置文件--&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environments</span> <span class=\"hljs-attr\">default</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">environment</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mysql&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">transactionManager</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;JDBC&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dataSource</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;POOLED&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;driver&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;url&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;url&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;username&#125;&quot;</span>/&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">property</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;$&#123;password&#125;&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dataSource</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environment</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">environments</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>如果一个属性在不只一个地方进行了配置，那么，MyBatis 将按照下面的顺序来加载：</p>\n<ul>\n<li>首先读取在 properties 元素体内指定的属性。</li>\n<li>然后根据 properties 元素中的 resource 属性读取类路径下属性文件，或根据 url 属性指定的路径读取属性文件，并覆盖之前读取过的同名属性。</li>\n<li>最后读取作为方法参数传递的属性，并覆盖之前读取过的同名属性。</li>\n</ul>\n<p>因此，通过方法参数传递的属性具有最高优先级，resource/url 属性中指定的配置文件次之，最低优先级的则是 properties 元素中指定的属性。</p>\n</blockquote>\n<p><strong>配置别名</strong></p>\n<blockquote>\n<p>类型别名可为 Java 类型设置一个缩写名字。 它仅用于 XML 配置，意在降低冗余的全限定类名书写。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--别名</span><br><span class=\"hljs-comment\">    用来减少完全限定名的冗余</span><br><span class=\"hljs-comment\">--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">typeAliases</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--方法一：可以给实体类其别名--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">typeAlias</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo.User&quot;</span> <span class=\"hljs-attr\">alias</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">typeAlias</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">\t\t方法二：</span><br><span class=\"hljs-comment\">    指定一个包名，Mybatis会在包名下搜索所需要的JavaBean</span><br><span class=\"hljs-comment\">    扫描实体类的包，它的默认别名就是这个类的类名</span><br><span class=\"hljs-comment\">\t\t在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名</span><br><span class=\"hljs-comment\">    也可以在实体类上增加注解</span><br><span class=\"hljs-comment\">    --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">package</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">typeAliases</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--方法一--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><br>    select * from mybatis.user<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--方法二--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;user&quot;</span>&gt;</span><br>    select * from mybatis.user<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<p><strong>设置（settings）</strong></p>\n<table>\n<thead>\n<tr>\n<th>设置名</th>\n<th>描述</th>\n<th>有效值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cacheEnabled</td>\n<td>全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</td>\n<td>true \\</td>\n<td>false</td>\n<td>true</td>\n</tr>\n<tr>\n<td>mapUnderscoreToCamelCase</td>\n<td>是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。</td>\n<td>true \\</td>\n<td>false</td>\n<td>False</td>\n</tr>\n<tr>\n<td>logImpl</td>\n<td>指定 MyBatis 所用日志的具体实现，未指定时将自动查找。</td>\n<td>SLF4J \\</td>\n<td>LOG4J(deprecated since 3.5.9) \\</td>\n<td>LOG4J2 \\</td>\n<td>JDK_LOGGING \\</td>\n<td>COMMONS_LOGGING \\</td>\n<td>STDOUT_LOGGING \\</td>\n<td>NO_LOGGING</td>\n<td>未设置</td>\n</tr>\n<tr>\n<td>lazyLoadingEnabled</td>\n<td>延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 <code>fetchType</code> 属性来覆盖该项的开关状态。</td>\n<td>true \\</td>\n<td>false</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p><strong>映射器（mappers）</strong></p>\n<p>可以使用相对于类路径的资源引用，或完全限定资源定位符（包括 <code>file:///</code> 形式的 URL），或类名和包名等告诉 MyBatis 到哪里去找映射文件.</p>\n<blockquote>\n<p>方式一：resource<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 使用相对于类路径的资源引用 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;org/mybatis/builder/AuthorMapper.xml&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure><br>方式二：class<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 使用映射器接口实现类的完全限定类名 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;org.mybatis.builder.AuthorMapper&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure></p>\n<p><strong>注意：</strong></p>\n<ol>\n<li>接口和Mapper配置文件必须同名</li>\n<li>接口和Mapper配置文件必须在同一个包下</li>\n</ol>\n<p>方式三：package</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\">&gt;<span class=\"hljs-comment\">&lt;!-- 将包内的映射器接口实现全部注册为映射器 --&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">package</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;org.mybatis.builder&quot;</span>/&gt;</span><br>&gt;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"编写程序\"><a href=\"#编写程序\" class=\"headerlink\" title=\"编写程序\"></a>编写程序</h3><p>MyBatis 提供的所有特性都可以利用基于 XML 的映射语言来实现，这使得 MyBatis 在过去的数年间得以流行</p>\n<img src=\"/article/13919/image-20220108215520312.png\" class title=\"image-20220108215520312\">\n<p><strong>例</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">mapper</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-keyword\">PUBLIC</span> <span class=\"hljs-meta-string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class=\"hljs-meta\">        <span class=\"hljs-meta-string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--命名空间  绑定一个对应的Mapper接口--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">namespace</span>=<span class=\"hljs-string\">&quot;com.bobo.Mapper.UserMapper&quot;</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--</span><br><span class=\"hljs-comment\">id:对应的namespace中的方法名</span><br><span class=\"hljs-comment\">resultType：SQL语句执行的返回值</span><br><span class=\"hljs-comment\">parameterType：参数类型</span><br><span class=\"hljs-comment\">--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getUserList&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;com.bobo.pojo.User&quot;</span>&gt;</span><br>        select * from mybatis.user<br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>与之对应的是</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.User;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.Map;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">UserMapper</span></span>&#123;<br>    <span class=\"hljs-comment\">/**</span><br><span class=\"hljs-comment\">     * <span class=\"hljs-doctag\">@return</span> 查询全部用户</span><br><span class=\"hljs-comment\">     * 得到用户列表</span><br><span class=\"hljs-comment\">     */</span><br>    <span class=\"hljs-function\">List&lt;User&gt; <span class=\"hljs-title\">getUserList</span><span class=\"hljs-params\">()</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>绑定</p>\n<p>每一个<code>Mapper.XML</code>都需要在Mybatis核心配置文件中注册</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--每一个Mapper.XML都需要在Mybatis核心配置文件中注册--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mappers</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapper</span> <span class=\"hljs-attr\">resource</span>=<span class=\"hljs-string\">&quot;com/bobo/dao/UserMapper.xml&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mappers</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>如果绑定失败，可能是资源目录没有导出成功,<a href=\"/article/37040.html\" title=\"点击跳转Maven资源导出配置\">点击跳转Maven资源导出配置</a></p>\n<p>测试</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.User;<br><span class=\"hljs-keyword\">import</span> com.bobo.utils.MybatisUtils;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.session.SqlSession;<br><span class=\"hljs-keyword\">import</span> org.junit.Test;<br><span class=\"hljs-keyword\">import</span> java.util.HashMap;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">import</span> java.util.Map;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">UserMapperTest</span></span>&#123;<br>    <span class=\"hljs-meta\">@Test</span><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">test</span><span class=\"hljs-params\">()</span></span>&#123;<br>        <span class=\"hljs-comment\">//1.获得SqlSession对象</span><br>        SqlSession sqlSession = MybatisUtils.getSqlSession();<br>        <span class=\"hljs-comment\">//方式一：getMapper</span><br>        UserMapper mapper = sqlSession.getMapper(UserMapper.class);<br>        List&lt;User&gt; userList = mapper.getUserList();<br><br>        <span class=\"hljs-comment\">//方式二：</span><br><span class=\"hljs-comment\">//        List&lt;User&gt; userList = sqlSession.selectList(&quot;com.bobo.dao.UserMapper.getUserList&quot;);</span><br>        <span class=\"hljs-keyword\">for</span> (User user : userList) &#123;<br>            System.out.println(user);<br>        &#125;<br><br>        <span class=\"hljs-comment\">//关闭SqlSession</span><br>        sqlSession.close();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p><strong>注意：</strong>增删改需要提交事务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-comment\">//提交事务</span><br>        sqlSession.commit();<br>        sqlSession.close();<br></code></pre></td></tr></table></figure>\n<h3 id=\"对命名空间的一点补充\"><a href=\"#对命名空间的一点补充\" class=\"headerlink\" title=\"对命名空间的一点补充\"></a><strong>对命名空间的一点补充</strong></h3><p>在之前版本的 MyBatis 中，<strong>命名空间（Namespaces）</strong>的作用并不大，是可选的。 但现在，随着命名空间越发重要，你必须指定命名空间。</p>\n<p>命名空间的作用有两个，一个是利用更长的全限定名来将不同的语句隔离开来，同时也实现了你上面见到的接口绑定。就算你觉得暂时用不到接口绑定，你也应该遵循这里的规定，以防哪天你改变了主意。 长远来看，只要将命名空间置于合适的 Java 包命名空间之中，你的代码会变得更加整洁，也有利于你更方便地使用 MyBatis。</p>\n<p><strong>命名解析：</strong>为了减少输入量，MyBatis 对所有具有名称的配置元素（包括语句，结果映射，缓存等）使用了如下的命名解析规则。</p>\n<ol>\n<li><p>全限定名（比如 “com.mypackage.MyMapper.selectAllThings）将被直接用于查找及使用。</p>\n</li>\n<li><p>短名称（比如 “selectAllThings”）如果全局唯一也可以作为一个单独的引用。 如果不唯一，有两个或两个以上的相同名称（比如 “com.foo.selectAllThings” 和 “com.bar.selectAllThings”），那么使用时就会产生“短名称不唯一”的错误，这种情况下就必须使用全限定名。</p>\n</li>\n</ol>\n<h3 id=\"作用域（Scope）和生命周期\"><a href=\"#作用域（Scope）和生命周期\" class=\"headerlink\" title=\"作用域（Scope）和生命周期\"></a>作用域（Scope）和生命周期</h3><p><strong>对象生命周期和依赖注入框架</strong></p>\n<p>依赖注入框架可以创建线程安全的、基于事务的 SqlSession 和映射器，并将它们直接注入到你的 bean 中，因此可以直接忽略它们的生命周期。</p>\n<ol>\n<li><p><strong>SqlSessionFactoryBuilder</strong></p>\n<p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。 因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但最好还是不要一直保留着它，以保证所有的 XML 解析资源可以被释放给更重要的事情。</p>\n</li>\n<li><p><strong>SqlSessionFactory</strong></p>\n<p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。  SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。</p>\n</li>\n<li><p><strong>SqlSession</strong></p>\n<p>每个线程都应该有它自己的 SqlSession 实例。SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。  <strong>绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中。</strong></p>\n</li>\n</ol>\n<h3 id=\"XML-映射文件\"><a href=\"#XML-映射文件\" class=\"headerlink\" title=\"XML 映射文件\"></a>XML 映射文件</h3><ul>\n<li><code>cache</code> – 该命名空间的缓存配置。</li>\n<li><code>cache-ref</code> – 引用其它命名空间的缓存配置。</li>\n<li><code>resultMap</code> – 描述如何从数据库结果集中加载对象，是最复杂也是最强大的元素。</li>\n<li><code>resultType</code> - 期望从这条语句中返回结果的类全限定名或别名。 注意，如果返回的是集合，那应该设置为集合包含的类型，而不是集合本身的类型。 resultType 和 resultMap 之间只能同时使用一个。</li>\n<li><del>parameterMap</del> – 老式风格的参数映射。此元素已被废弃，并可能在将来被移除！请使用行内参数映射。</li>\n<li><code>parameterType</code> - 将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</li>\n<li><code>sql</code> – 可被其它语句引用的可重用语句块。</li>\n<li><code>insert</code> – 映射插入语句。</li>\n<li><code>update</code> – 映射更新语句。</li>\n<li><code>delete</code> – 映射删除语句。</li>\n<li><code>select</code> – 映射查询语句</li>\n</ul>\n<p><strong>结果映射</strong></p>\n<p><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC <code>ResultSets</code> 数据提取代码中解放出来，并在一些情形下允许你进行一些 JDBC 不支持的操作。</p>\n<p>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</p>\n<p>举例<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;userResultMap&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;User&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">id</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;user_id&quot;</span> /&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;username&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;user_name&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;password&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;hashed_password&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;selectUsers&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;userResultMap&quot;</span>&gt;</span><br>  select user_id, user_name, hashed_password<br>  from some_table<br>  where id = #&#123;id&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>复杂查询</strong></p>\n<ol>\n<li><p>多对一查询（多个同学对应一个老师）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.pojo;<br><span class=\"hljs-keyword\">import</span> lombok.Data;<br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Student</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> id;<br>  <span class=\"hljs-keyword\">private</span> String name;<br>  <span class=\"hljs-comment\">//学生要关联一个老师</span><br>  <span class=\"hljs-keyword\">private</span> Teacher teacher;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Student;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">StudentMapper</span> </span>&#123;<br>  <span class=\"hljs-comment\">//查询所有的学生信息，以及对应的老师的信息</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Student&gt; <span class=\"hljs-title\">getStudent</span><span class=\"hljs-params\">()</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>方法一：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--思路：</span><br><span class=\"hljs-comment\">1。查询所有学生信息</span><br><span class=\"hljs-comment\">2。根据查询出来的学生的tid 寻找对应的老师</span><br><span class=\"hljs-comment\">--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudent&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span>&gt;</span><br>  select * from student<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;name&quot;</span>/&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--复杂的属性需要单独处理</span><br><span class=\"hljs-comment\">       对象：association</span><br><span class=\"hljs-comment\">       集合：collection</span><br><span class=\"hljs-comment\"> javaType 指定的属性类型</span><br><span class=\"hljs-comment\">--&gt;</span><br>   <br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">association</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;teacher&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span> <span class=\"hljs-attr\">select</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  select * from teacher where id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--按照结果集嵌套处理--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudent&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span>&gt;</span><br>  select s.id sid,s.name sname,t.name tname,t.id tid<br>  from student s,teacher t where s.tid = t.id;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;StudentTeacher&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sname&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">association</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;teacher&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tname&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">association</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>一对多（一个老师对应多个同学）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.pojo;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Student;<br><span class=\"hljs-keyword\">import</span> lombok.Data;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><span class=\"hljs-meta\">@Data</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Teacher</span> </span>&#123;<br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> id;<br>  <span class=\"hljs-keyword\">private</span> String name;<br><br>  <span class=\"hljs-comment\">//一个老师拥有多个学生</span><br>  <span class=\"hljs-keyword\">private</span> List&lt;Student&gt; students;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.Mapper;<br><span class=\"hljs-keyword\">import</span> com.bobo.pojo.Teacher;<br><span class=\"hljs-keyword\">import</span> org.apache.ibatis.annotations.Param;<br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">TeacherMapper</span> </span>&#123;<br>  <span class=\"hljs-comment\">//获取所有老师</span><br>  <span class=\"hljs-comment\">//List&lt;Teacher&gt; getTeacher();</span><br>  <span class=\"hljs-comment\">//获取指定老师下的所有学生以及老师的信息</span><br>  <span class=\"hljs-function\">Teacher <span class=\"hljs-title\">getTeacher</span><span class=\"hljs-params\">(<span class=\"hljs-meta\">@Param(&quot;tid&quot;)</span> <span class=\"hljs-keyword\">int</span> id)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>方法一：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--按照结果嵌套查询--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span>&gt;</span><br>  select s.id sid, s.name sname, t.name tname, t.id tid<br>  from student s,teacher t<br>  where s.tid = t.id and t.id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tname&quot;</span>/&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--复杂的属性，我们需要单独处理</span><br><span class=\"hljs-comment\">        javaType 指定的属性类型</span><br><span class=\"hljs-comment\">        集合中的泛型信息，我们使用ofType获取</span><br><span class=\"hljs-comment\">    --&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">collection</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;students&quot;</span> <span class=\"hljs-attr\">ofType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sid&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;name&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;sname&quot;</span>/&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;tid&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;tid&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">collection</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>方法二：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getTeacher&quot;</span> <span class=\"hljs-attr\">resultMap</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span>&gt;</span><br>  select * from mybatis.teacher where id = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">resultMap</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;TeacherStudent&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;Teacher&quot;</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">result</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;id&quot;</span> <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">collection</span> <span class=\"hljs-attr\">property</span>=<span class=\"hljs-string\">&quot;students&quot;</span> <span class=\"hljs-attr\">javaType</span>=<span class=\"hljs-string\">&quot;ArrayList&quot;</span> <span class=\"hljs-attr\">ofType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span> <span class=\"hljs-attr\">select</span>=<span class=\"hljs-string\">&quot;getStudentByTeacherId&quot;</span></span><br><span class=\"hljs-tag\">              <span class=\"hljs-attr\">column</span>=<span class=\"hljs-string\">&quot;id&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">resultMap</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;getStudentByTeacherId&quot;</span> <span class=\"hljs-attr\">resultType</span>=<span class=\"hljs-string\">&quot;Student&quot;</span>&gt;</span><br>  select *<br>  from mybatis.student where tid = #&#123;tid&#125;<br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"日志\"><a href=\"#日志\" class=\"headerlink\" title=\"日志\"></a>日志</h3><p>SLF4J | <strong>LOG4J(deprecated since 3.5.9)</strong> | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | <strong>STDOUT_LOGGING</strong> | NO_LOGGING</p>\n<p><strong>STDOUT_LOGGING</strong> 标准日志输出</p>\n<p><code>mybatis-config.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--标准日志工厂实现--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;logImpl&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p><code>LOG4J(deprecated since 3.5.9)</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--LOG4J日志--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;logImpl&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;LOG4J&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>使用LOG4J需要添加propertise配置文件<code>log4j.properties</code>(直接百度)</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs properties\"><span class=\"hljs-meta\">log4j.rootLogger</span>=<span class=\"hljs-string\">DEBUG,console,file</span><br><br><span class=\"hljs-meta\">log4j.appender.console</span> = <span class=\"hljs-string\">org.apache.log4j.ConsoleAppender</span><br><span class=\"hljs-meta\">log4j.appender.console.Target</span> = <span class=\"hljs-string\">System.out</span><br><span class=\"hljs-meta\">log4j.appender.console.Threshold</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.appender.console.layout</span> = <span class=\"hljs-string\">org.apache.log4j.PatternLayout</span><br><span class=\"hljs-meta\">log4j.appender.console.layout.ConversionPattern</span>=<span class=\"hljs-string\">[%c]-%m%n</span><br><br><span class=\"hljs-meta\">log4j.appender.file</span> = <span class=\"hljs-string\">org.apache.log4j.RollingFileAppender</span><br><span class=\"hljs-meta\">log4j.appender.file.File</span>=<span class=\"hljs-string\">./log/bobo.log</span><br><span class=\"hljs-meta\">log4j.appender.file.MaxFileSize</span>=<span class=\"hljs-string\">10mb</span><br><span class=\"hljs-meta\">log4j.appender.file.Threshold</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.appender.file.layout</span>=<span class=\"hljs-string\">org.apache.log4j.PatternLayout</span><br><span class=\"hljs-meta\">log4j.appender.file.layout.ConversionPattern</span>=<span class=\"hljs-string\">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span><br><br><span class=\"hljs-meta\">log4j.logger.org.mybatis</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.Statement</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.ResultSet</span>=<span class=\"hljs-string\">DEBUG</span><br><span class=\"hljs-meta\">log4j.logger.java.sql.PreparedStatement</span>=<span class=\"hljs-string\">DEBUG</span><br></code></pre></td></tr></table></figure>\n<p><strong>log4j使用</strong></p>\n<ol>\n<li><p>在要使用Log4j的类中，导入包<code>org.apache.log4j.Logger;</code></p>\n</li>\n<li><p>日志对象，参数为当前类的class</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">static</span> Logger logger = Logger.getLogger(UserDaoTest.class);<br></code></pre></td></tr></table></figure>\n</li>\n<li><p>日志级别</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">logger.info(<span class=\"hljs-string\">&quot;info:进入了testLog4j&quot;</span>);<br>logger.debug(<span class=\"hljs-string\">&quot;debug:进入了testLog4j&quot;</span>);<br>logger.error(<span class=\"hljs-string\">&quot;error:进入了testLog4j&quot;</span>);<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"和-的区别\"><a href=\"#和-的区别\" class=\"headerlink\" title=\"#{} 和 ${} 的区别\"></a>#{} 和 ${} 的区别</h3><p>#{}和${}这两个语法是为了动态传递参数而存在的，是Mybatis实现动态SQL的基础，总体上他们的作用是一致的（为了动态传参），但是在编译过程、是否自动加单引号、安全性、使用场景等方面有很多不同，下面详细比较两者间的区别： </p>\n<ol>\n<li><p>编译过程</p>\n<ol>\n<li><strong>#{}</strong> <strong>是</strong> <strong>占位符</strong> <strong>：动态解析 -&gt; 预编译 -&gt; 执行</strong></li>\n<li><strong>${}</strong> <strong>是</strong> <strong>拼接符</strong> <strong>：动态解析 -&gt; 编译 -&gt; 执行</strong></li>\n</ol>\n<p>预编译可以类比java类的编译，java类被编译成class文件，载入虚拟机，载入虚拟机的字节码文件可以先被编译成机器吗，那么在执行某行代码的时候就可以直接执行编译后的机器码，而不用从字节码开始编译再执行，那么执行效率就高了。这也是为啥热机状态比冷机状态可以抗更多负载的原因。</p>\n<p>sql的预编译也是一样的道理，在执行执行前就编译好，等执行时直接取编译结果去执行。省去编译时间。sql预编译后会在参数位置用<a href=\"https://so.csdn.net/so/search?q=占位符\">占位符</a>表示。 </p>\n<p>预编译：数据库驱动在发送sql和参数到DBMS之前，先对sql语句进行编译处理，之后DBMS则可以直接对sql进行处理，不需要再次编译，提高了性能。这一点mybatis 默认情况下，将对所有的 sql 进行预编译处理。</p>\n<ul>\n<li>预编译可以将多个操作步骤合并成一个步骤，一般而言，越复杂的sql，编译程度也会复杂，难度大，耗时，费性能，而预编译可以合并这些操作，预编译之后DBMS可以省去编译直接运行sql。</li>\n<li>预编译语句可以重复利用。<br>把一个 sql 预编译后产生的 PreparedStatement 对象缓存下来，下次对于同一个sql，可以直接使用这个缓存的 PreparedState 对象。</li>\n</ul>\n</li>\n<li><p>是否自动加单引号</p>\n<ol>\n<li><strong>#{}</strong> 对应的变量会自动加上单引号</li>\n<li><strong>${}</strong> 对应的变量不会加上单引号</li>\n</ol>\n</li>\n<li><p>安全性</p>\n<ol>\n<li><strong>#{} </strong>能防止sql注入</li>\n<li><strong>${}</strong> 不能防止sql注入</li>\n</ol>\n</li>\n<li><p>Mybatis默认值不同</p>\n<ol>\n<li><strong>#{}</strong> 默认值 arg0、arg1、arg2 或 0、 1</li>\n<li><strong>${}</strong> 默认值param1、param2、param3</li>\n</ol>\n</li>\n<li><p>如何选择 #{} 和 ${}</p>\n<ol>\n<li>能用 <strong>#{}</strong> 的地方就用 <strong>#{}</strong>，尽量少用 ${}</li>\n<li>表名作参数，或者order by 排序时用 <strong>${}</strong></li>\n<li>传参时参数使用<strong>@Param(“”)</strong>注解，<strong>@Param</strong>注解的作用是给参数命名，参数命名后就能根据名字得到参数值（相当于又加了一层密），正确的将参数传入sql语句中（一般通过#{}的方式，${}会有sql注入的问题）。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"缓存\"><a href=\"#缓存\" class=\"headerlink\" title=\"缓存\"></a>缓存</h3><p>使用缓存， 我们可以避免频繁的与数据库进行交互， 尤其是在查询越多、缓存命中率越高的情况下， 使用缓存对性能的提高更明显。</p>\n<p>mybatis 也提供了对缓存的支持， 分为一级缓存和二级缓存。 但是在默认的情况下， 只开启一级缓存（一级缓存是对同一个 SqlSession 而言的）。</p>\n<p><strong>缓存</strong>就是数据交换的缓冲区（称作Cache），是存贮数据（使用频繁的数据）的临时地方。当用户查询数据，首先在缓存中寻找，如果找到了则直接执行。如果找不到，则去数据库中查找。</p>\n<p>MyBatis 提供了<strong>一级缓存</strong>和<strong>二级缓存</strong>的支持，默认情况下只有一级缓存</p>\n<ol>\n<li><p><strong>一级缓存</strong>: 基于PerpetualCache 的 HashMap本地缓存，其<strong>存储作用域为</strong> <strong>Session</strong>，当 <strong>Session flush</strong> <strong>或</strong> <strong>close</strong> 之后，该<strong>Session中的所有 Cache 就将清空</strong>。</p>\n<p><strong>增删改也会刷新缓存</strong></p>\n<p><strong>手动清理缓存：</strong><code>sqlSession.clearCache();</code></p>\n</li>\n<li><p><strong>二级缓存</strong>与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap存储，不同在于其<strong>存储作用域为 Mapper(Namespace)</strong>，并且<strong>可自定义存储源</strong>，如 Ehcache。 要启用全局的二级缓存，首先开启全局缓存：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">settings</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--显示的开启全剧缓存--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">setting</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;cacheEnabled&quot;</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;true&quot;</span>/&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">settings</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>然后只需要在你的 SQL 映射文件中添加一行：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">cache</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n<p>工作机制：</p>\n<ol>\n<li>一个会话查询一条数据，这个数据就会被放在当前会话的一级缓存中；</li>\n<li>如果当前会话关闭了，这个会话对应的一级缓存就没了；</li>\n<li>会话关闭之后，一级缓存中的数据会被保存在二级缓存中；</li>\n<li>新的会话查询消息，就会从二级缓存中获取内容；</li>\n<li>不同的mapper查出 的数据会放在自己对应的缓存（map）中</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>映射语句文件中的所有 select 语句的结果将会被缓存。</li>\n<li><strong>映射语句文件中的所有 insert、update 和 delete 语句会刷新缓存。</strong></li>\n<li>缓存会使用最近最少使用算法（LRU, Least Recently Used）算法来清除不需要的缓存。</li>\n<li>缓存不会定时进行刷新（也就是说，没有刷新间隔）。</li>\n<li>缓存会保存列表或对象（无论查询方法返回哪种）的 1024 个引用。</li>\n<li><p>缓存会被视为读/写缓存，这意味着获取到的对象并不是共享的，可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。</p>\n<p><strong>提示</strong> 缓存只作用于 cache 标签所在的映射文件中的语句。如果你混合使用 Java API 和 XML 映射文件，在共用接口中的语句将不会被默认缓存。你需要使用 @CacheNamespaceRef 注解指定缓存作用域。</p>\n<p><strong>提示</strong> 二级缓存是事务性的。这意味着，当 SqlSession 完成并提交时，或是完成并回滚，但没有执行 flushCache=true 的 insert/delete/update 语句时，缓存会获得更新。</p>\n</li>\n</ul>\n","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"Mybatis","path":"api/categories/Mybatis.json"},{"name":"SSM","path":"api/categories/SSM.json"},{"name":"Mybatis","path":"api/categories/Mybatis.json"}],"tags":[{"name":"Mybatis","path":"api/tags/Mybatis.json"}]}