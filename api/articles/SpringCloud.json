{"title":"SpringCloud","slug":"SpringCloud","date":"2022-02-22T05:47:51.000Z","updated":"2022-02-25T02:31:24.230Z","comments":true,"path":"api/articles/SpringCloud.json","realPath":null,"excerpt":null,"covers":["/article/42622/image-20220223124010573.png","/article/42622/image-20220223124034883.png","/article/42622/image-20220223124230419.png","/article/42622/image-20220223124558372.png","/article/42622/image-20220224090112639.png","/article/42622/image-20220224090049462.png","/article/42622/image-20220224090644886.png","/article/42622/image-20220224090950094.png","/article/42622/1.png"],"cover":"/images/theme/coverphoto/springcloud.jpeg","content":"<blockquote>\n<p>You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,” said the dewdrop to the lake.</p>\n<p>露珠对湖水说道；“你是在荷叶下面的大露珠，我是在荷叶上面的较小的露<br>珠。”　</p>\n</blockquote>\n<h2 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h2><p><a href=\"https://www.springcloud.cc\">SpringCloud中文网</a></p>\n<p><a href=\"https://spring.io/projects/spring-cloud\">SpringCloud官网</a></p>\n<p>SpringCloud是一个基于SpringBoot实现的云应用开发工具，它为基于JVM的云应用开发中涉及<strong>的配置管理、服务发现、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理</strong>等操作提供了一种简单的开发方式。</p>\n<p><strong>微服务架构</strong></p>\n<p>微服务(Microservices Architecture)是一种架构风格，一个大型复杂软件应用由一个或多个微服务组成。系统中的各个微服务可被独立部署，各个微服务之间是松耦合的。每个微服务仅关注于完成一件任务并很好地完成该任务。在所有情况下，每个任务代表着一个小的业务能力。</p>\n<p>微服务架构的<strong>核心思想</strong>是，一个应用是由多个小的、相互独立的、微服务组成，这些服务运行在自己的进程中，开发和发布都没有依赖。不同服务通过一些<strong>轻量级交互机制来通信</strong>，例如 RPC、HTTP 等，服务可独立扩展伸缩，每个服务定义了明确的边界，不同的服务甚至可以采用不同的编程语言来实现，由独立的团队来维护。简单的来说，一个系统的不同模块转变成不同的服务！而且服务可以使用不同的技术加以实现！</p>\n<h3 id=\"学习环境搭建\"><a href=\"#学习环境搭建\" class=\"headerlink\" title=\"学习环境搭建\"></a>学习环境搭建</h3><img src=\"/article/42622/image-20220223124010573.png\" class title=\"image-20220223124010573\">\n<p><code>父项目pom.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">junit.version</span>&gt;</span>4.13.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">junit.version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">lombok.version</span>&gt;</span>1.18.20<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">lombok.version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">log4j.version</span>&gt;</span>1.2.12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">log4j.version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-comment\">&lt;!--打包方式--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">packaging</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">packaging</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--Springcloud依赖--&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2020.0.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--springboot--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.5.7<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--连接数据库--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>8.0.27<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--数据源--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>druid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--springboot启动器--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--日志测试--&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--log4j--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;junit.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;lombok.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--log4j--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>log4j<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>log4j<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;log4j.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>ch.qos.logback<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>logback-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.7<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"SpringCloud-api\"><a href=\"#SpringCloud-api\" class=\"headerlink\" title=\"SpringCloud-api\"></a>SpringCloud-api</h4><img src=\"/article/42622/image-20220223124034883.png\" class title=\"image-20220223124034883\">\n<p>配置SpringCloud-api，pom环境引入父项目依赖，构建实体类。</p>\n<h4 id=\"springcloud-provider-dept-8001\"><a href=\"#springcloud-provider-dept-8001\" class=\"headerlink\" title=\"springcloud-provider-dept-8001\"></a>springcloud-provider-dept-8001</h4><img src=\"/article/42622/image-20220223124230419.png\" class title=\"image-20220223124230419\">\n<p>构建服务者，springcloud-provider-dept-8001</p>\n<p>配置服务者<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8001</span><br><br><span class=\"hljs-comment\">#mybatis配置</span><br><span class=\"hljs-attr\">mybatis:</span><br>  <span class=\"hljs-attr\">type-aliases-package:</span> <span class=\"hljs-string\">com.bobo.springcloud.pojo</span><br>  <span class=\"hljs-attr\">config-location:</span> <span class=\"hljs-string\">classpath:mybatis/mybatis-config.xml</span><br>  <span class=\"hljs-attr\">mapper-locations:</span> <span class=\"hljs-string\">classpath:mybatis/mapper/*.xml</span><br><br><span class=\"hljs-comment\">#spring配置</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">springcloud-provider-dept</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">com.alibaba.druid.pool.DruidDataSource</span>  <span class=\"hljs-comment\">#数据源</span><br>    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://localhost:3306/(api实体类对应数据库名)?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true</span><br>    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">密码</span><br>    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">用户名</span><br></code></pre></td></tr></table></figure>\n<p>配置<code>pom.xml</code>版本号依赖于父项目</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--添加监控信息--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.4.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>  <span class=\"hljs-comment\">&lt;!--我们需要拿到实体类  索要配置api module--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.bobo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springcloud-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>druid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>ch.qos.logback<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>logback-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--test--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--web--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--jetty--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--热部署--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"springcloud-consumer-dept-80\"><a href=\"#springcloud-consumer-dept-80\" class=\"headerlink\" title=\"springcloud-consumer-dept-80\"></a>springcloud-consumer-dept-80</h4><img src=\"/article/42622/image-20220223124558372.png\" class title=\"image-20220223124558372\">\n<p>构建消费者，springcloud-consumer-dept-80</p>\n<p>配置消费者<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n<p>配置<code>pom.xml</code>版本号依赖于父项目</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>  <br>  <span class=\"hljs-comment\">&lt;!--实体类+web--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.bobo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springcloud-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"SpringCloud-Eureka\"><a href=\"#SpringCloud-Eureka\" class=\"headerlink\" title=\"SpringCloud Eureka\"></a>SpringCloud Eureka</h2><p><strong>SpringCloud Eureka来实现服务治理</strong></p>\n<p>SpringCloud Eureka是SpringCloud Netflix项目下的服务治理模块。而SpringCloud Netflix项目是SpringCloud的子项目之一，主要内容是对Netflix公司一系列开源产品的包装，它为SpringBoot应用提供了自配置的Netflix OSS整合。通过一些简单的注解，开发者就可以快速的在应用中配置一下常用模块并构建庞大的分布式系统。</p>\n<p>它主要提供的模块包括：<strong>服务发现（Eureka），断路器（Hystrix），智能路由（Zuul），客户端负载均衡（Ribbon）</strong>等。</p>\n<h3 id=\"EurekaServer\"><a href=\"#EurekaServer\" class=\"headerlink\" title=\"EurekaServer\"></a>EurekaServer</h3><p><strong>提供服务注册和发现  springcloud-eureka-7002</strong></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<p>在项目 <code>pom.xml</code>中引入需要的依赖内容</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为，只需要在<code>application.yml</code>配置文件中增加如下信息：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#配置端口号</span><br><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7001</span><br><br><span class=\"hljs-comment\">#Eureka</span><br><span class=\"hljs-attr\">eureka:</span><br>\t<span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">localhost</span>   <span class=\"hljs-comment\">#Eureka服务端的实例名称</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>   <span class=\"hljs-comment\">#表示是否向eureka服务中心注册自己</span><br>    <span class=\"hljs-attr\">fetch-registry:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#如果为false则表示自己为注册中心</span><br>    <span class=\"hljs-attr\">service-url:</span><br>    \t<span class=\"hljs-comment\">#监控页面</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"29.333ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 12629.6 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">{eureka.instance.hostname}:</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-75\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6B\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-61\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-68\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6D\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-75\" x=\"466\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"1039\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"1490\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6B\" x=\"1957\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"2478\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-2E\" x=\"3008\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"3453\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"3798\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"4399\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"4868\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"5230\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"5759\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"6360\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"6793\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-2E\" x=\"7260\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-68\" x=\"7705\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"8281\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"8767\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"9236\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"9598\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"10198\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6D\" x=\"10728\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"11606\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-3A\" x=\"12351\" y=\"0\"/>\n</g>\n</svg>&#123;server.port&#125;/eureka/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>通过 <code>@EnableEurekaServer</code> 注解启动一个服务注册中心提供给其他应用进行对话,这个注解需要在SpringBoot工程的主启动类上加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;<br><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaServer</span>   <span class=\"hljs-comment\">//EnableEurekaServer服务端的启动类，可以接受别人注册进来</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EurekaServer_7001</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        SpringApplication.run(EurekaServer_7001.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>访问服务</strong></p>\n<p>启动工程后，访问：<a href=\"http://localhost:7001/\">http://localhost:7001/</a></p>\n</li>\n</ol>\n<h3 id=\"Service-Provider\"><a href=\"#Service-Provider\" class=\"headerlink\" title=\"Service Provider\"></a>Service Provider</h3><p>服务提供方:将自身服务注册到 Eureka 注册中心，从而使服务消费方能够找到</p>\n<ol>\n<li><p><strong>添加依赖<code>pom.xml</code></strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong><code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#Eureka的配置  服务注册到哪里</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://localhost:7001/eureka/</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">springcloud-provider-dept8001</span>   <span class=\"hljs-comment\">#修改Eureka 的默认描述信息</span><br><br><span class=\"hljs-comment\">#info配置</span><br><span class=\"hljs-attr\">info:</span><br>  <span class=\"hljs-attr\">app.name:</span> <span class=\"hljs-string\">bobo-springcloud</span><br>  <span class=\"hljs-attr\">company.name:</span> <span class=\"hljs-string\">bobo666</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在应用主类中通过加上 <code>@EnableEurekaClient</code>，但只有 Eureka 可用.</p>\n<p>也可以使用@EnableDiscoveryClient,需要配置才能找到Eureka注册中心服务器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaClient</span>   <span class=\"hljs-comment\">//自动在服务启动后自动注册到Eureka中</span><br><span class=\"hljs-meta\">@EnableDiscoveryClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptProvider_8001</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(DeptProvider_8001.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>访问服务</strong></p>\n<p>启动该工程后，再次访问启动工程：<a href=\"http://localhost:7001/\">http://localhost:7001/</a></p>\n</li>\n</ol>\n<h3 id=\"多集群模拟\"><a href=\"#多集群模拟\" class=\"headerlink\" title=\"多集群模拟\"></a>多集群模拟</h3><img src=\"/article/42622/image-20220224090112639.png\" class title=\"image-20220224090112639\">\n<p><strong>如果一台主机试验，修改host文件</strong></p>\n<p>注释默认映射，添加映射</p>\n<img src=\"/article/42622/image-20220224090049462.png\" class title=\"image-20220224090049462\">\n<p>分别修改每个项目下<code>application.yam</code>文件，以7001为例</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7001</span><br><br><span class=\"hljs-comment\">#Eureka</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">eureka7001.com</span>   <span class=\"hljs-comment\">#Eureka服务端的实例名称</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>   <span class=\"hljs-comment\">#表示是否向eureka服务中心注册自己</span><br>    <span class=\"hljs-attr\">fetch-registry:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#如果为false则表示自己为注册中心</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br></code></pre></td></tr></table></figure>\n<p>修改<strong>服务提供方</strong><code>application.yam</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#Eureka的配置  服务注册到哪里</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">springcloud-provider-dept8001</span>   <span class=\"hljs-comment\">#修改Eureka 的默认描述信息</span><br><br><span class=\"hljs-comment\">#info配置</span><br><span class=\"hljs-attr\">info:</span><br>  <span class=\"hljs-attr\">app.name:</span> <span class=\"hljs-string\">bobo-springcloud</span><br>  <span class=\"hljs-attr\">company.name:</span> <span class=\"hljs-string\">bobo666</span><br></code></pre></td></tr></table></figure>\n<p>启动<strong>7001、7002、7003</strong>项目</p>\n<p>以7001为例</p>\n<img src=\"/article/42622/image-20220224090644886.png\" class title=\"image-20220224090644886\">\n<p>启动<strong>8001服务提供者</strong>项目</p>\n<img src=\"/article/42622/image-20220224090950094.png\" class title=\"image-20220224090950094\">\n<h3 id=\"Eureka与Zookeeper的区别\"><a href=\"#Eureka与Zookeeper的区别\" class=\"headerlink\" title=\"Eureka与Zookeeper的区别\"></a>Eureka与Zookeeper的区别</h3><p>CAP理论指出，一个分布式系统不可能同时满足C(一致性)、A(可用性)和P(分区容错性)。由于<strong>分区容错性P在是分布式系统中必须要保证</strong>的，因此我们只能在A和C之间进行权衡。<br><strong>Zookeeper保证CP</strong><br>Zookeeper 为主从结构，有leader节点和follow节点。当leader节点down掉之后，剩余节点会重新进行选举。选举过程中会导致服务不可用，丢掉了可用行。<br><strong>Eureka保证AP</strong><br>Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。</p>\n<blockquote>\n<p><strong>为什么CAP只能达到 CP 或者 AP？</strong></p>\n<p>由以上我们得知，P是必然存在的。<br>如果我们保证了CP，即一致性与分布容错。当我们通过一个服务器修改数据后，该服务器会向另一个服务器发送请求，将数据进行同步，但此时，该数据应处于锁定状态，不可再次修改，这样，如果此时我们想服务器发送请求，则得不到相应，这样就不能A，高可用。<br>如果我们保证了AP，那么我们不能对服务器进行锁定，任何时候都要得到相应，那么数据的一致性就不好说了。</p>\n</blockquote>\n<h3 id=\"Eureka自我保护机制\"><a href=\"#Eureka自我保护机制\" class=\"headerlink\" title=\"Eureka自我保护机制\"></a>Eureka自我保护机制</h3><p>在默认配置中Eureka Server服务在一定时间（<strong>默认为90秒</strong>）没接受到某个服务的心跳连接后，Eureka Server会注销该服务。但是会存在当网络分区发生故障，导致该时间内没有心跳连接，但该服务本身还是健康运行的情况。Eureka通过“自我保护模式”来解决这个问题。</p>\n<ol>\n<li><p>在自我保护模式中，Eureka Server会保护服务注册表中的信息，不再注销任何服务实例。当他收到的心跳数重新恢复到阈值以上时，该Eureka Server节点会自动退出自我保护模式。</p>\n</li>\n<li><p>在自我保护模式下，Eureka Server 仍然能够接受新服务的注册和查询请求，但是不会被同步到其他节点上（即保证当前节点依然可用。）</p>\n</li>\n<li>当网络稳定时，当前实例新的注册信息会被同步到其他节点中</li>\n</ol>\n<h2 id=\"Ribbon\"><a href=\"#Ribbon\" class=\"headerlink\" title=\"Ribbon\"></a>Ribbon</h2><p>SpringCloud Ribbon是基于Netflix Ribbon实现的一套<strong>客户端负载均衡</strong>的工具。它是一个基于HTTP和TCP的客户端负载均衡器。它可以通过在客户端中配置ribbonServerList来设置服务端列表去轮询访问以达到均衡负载的作用。</p>\n<p>Ribbon是Netflix发布的开源项目，主要功能是提供客户端的<strong>软件负载均衡算法</strong>，将Netflix的中间层服务连接在一起。Ribbon客户端组件提供一系列完善的配置项如连接超时，重试等。简单的说，就是在配置文件中列出Load Balancer（简称LB）后面所有的机器，Ribbon会自动的帮助你基于某种规则（如简单轮询，随即连接等）去连接这些机器。我们也很容易使用Ribbon实现自定义的负载均衡算法。</p>\n<h3 id=\"LB方案\"><a href=\"#LB方案\" class=\"headerlink\" title=\"LB方案\"></a>LB方案</h3><p>负载均衡，英文名称为Load Balance，其含义就是指将负载（工作任务）进行平衡、分摊到多个操作单元上进行运行，例如FTP服务器、Web服务器、企业核心应用服务器和其它主要任务服务器等，从而协同完成工作任务。</p>\n<p>负载均衡构建在原有网络结构之上，它提供了一种透明且廉价有效的方法扩展服务器和网络设备的带宽、加强网络数据处理能力、增加吞吐量、提高网络的可用性和灵活性。</p>\n<p><strong>集中式LB</strong>, 即在服务的消费方和提供方之间使用独立的LB设施(可以是硬件，如F5, 也可以是软件，如nginx), 由该设施负责把访问请求通过某种策略转发至服务的提供方；</p>\n<p><strong>进程内LB</strong>，将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用，然后自己再从这些地址中选择出一个合适的服务器。<strong>Ribbon就属于进程内LB</strong>，它只是一个类库，集成于消费方进程，消费方通过它来获取到服务提供方的地址。</p>\n<h3 id=\"集群模拟\"><a href=\"#集群模拟\" class=\"headerlink\" title=\"集群模拟\"></a>集群模拟</h3><p><strong>Ribbon Consumer</strong></p>\n<p><strong>服务消费者</strong></p>\n<ol>\n<li><p><strong>添加依赖 <code>pom.xml</code></strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--Ribbon负载均衡--&gt;</span><br><span class=\"hljs-comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--erueka--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br><br><span class=\"hljs-comment\">#eureka配置</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#不向eureka注册自己</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务负载均衡</strong></p>\n<p>在工程的启动类中,通过<code>@EnableEurekaClient</code>向服务注册中心注册；并且向程序的<code>ioc</code>注入一个<code>bean: restTemplate</code>并通过<code>@LoadBalanced</code>注解表明这个<code>restTemplate</code>开启负载均衡的功能。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;<br><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptConsumer_80</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(DeptConsumer_80.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.config;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Bean;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.client.RestTemplate;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigBean</span> </span>&#123;   <span class=\"hljs-comment\">//@Configuration   ----spring applicationContext.xml</span><br><br>  <span class=\"hljs-comment\">//配置负载均衡实现  RestTemplate</span><br>  <span class=\"hljs-meta\">@Bean</span><br>  <span class=\"hljs-meta\">@LoadBalanced</span>  <span class=\"hljs-comment\">//Ribbon</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> RestTemplate <span class=\"hljs-title\">getRestTemplate</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> RestTemplate();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>消费提供者方法</strong></p>\n<p>在<code>Controller</code> 类中，调用提供者的 <code>home</code> 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.controller;<br><span class=\"hljs-keyword\">import</span> com.bobo.springcloud.pojo.Dept;<br><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Controller;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.RestController;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.client.RestTemplate;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptConsumerController</span> </span>&#123;<br>  <span class=\"hljs-comment\">//理解 消费者不应该有service层</span><br>  <span class=\"hljs-comment\">//RestTemplate</span><br>  <span class=\"hljs-comment\">//提供多种便捷访问远程http服务的方法，是一种简单的restful服务模版</span><br>  <span class=\"hljs-meta\">@Autowired</span><br>  <span class=\"hljs-keyword\">private</span> RestTemplate restTemplate;<br><br>  <span class=\"hljs-comment\">//Ribbon 这里的地址 应该是一个变量，通过服务名来访问</span><br>  <span class=\"hljs-comment\">//private static final String REST_URL_PREFIX = &quot;http://localhost:8001&quot;;</span><br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String REST_URL_PREFIX = <span class=\"hljs-string\">&quot;http://SPRINGCLOUD-PROVIDER-DEPT&quot;</span>;<br><br>  <span class=\"hljs-meta\">@RequestMapping(&quot;/consumer/dept/list&quot;)</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Dept&gt; <span class=\"hljs-title\">list</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(REST_URL_PREFIX + <span class=\"hljs-string\">&quot;/dept/deptlist&quot;</span>, List.class);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>负载均衡</strong></p>\n<p>访问<a href=\"http://localhost/consumer/dept/list`，发现Ribbon已经实现负载均衡\">http://localhost/consumer/dept/list`，发现Ribbon已经实现负载均衡</a></p>\n</li>\n</ol>\n<h3 id=\"负载均衡算法\"><a href=\"#负载均衡算法\" class=\"headerlink\" title=\"负载均衡算法\"></a>负载均衡算法</h3><ol>\n<li><p>轮询法</p>\n<p>轮询法，就是将用户的请求轮流分配给服务器，就像是挨个数数，轮流分配。这种算法比较简单，他具有绝对均衡的优点，但是也正是因为绝对均衡它必须付出很大的代价，例如它无法保证分配任务的合理性，无法根据服务器承受能力来分配任务。</p>\n</li>\n<li><p>随机法</p>\n<p>随机法，是随机选择一台服务器来分配任务。它保证了请求的分散性达到了均衡的目的。同时它是没有状态的不需要维持上次的选择状态和均衡因子。但是随着任务量的增大，它的效果趋向轮询后也会具有轮询算法的部分缺点。</p>\n</li>\n<li><p>最小连接法</p>\n<p>最小连接法，将任务分配给此时具有最小连接数的节点，因此它是动态负载均衡算法。一个节点收到一个任务后连接数就会加1，当节点故障时就将节点权值设置为0，不再给节点分配任务。</p>\n<p>最小连接法适用于各个节点处理的性能相似时。任务分发单元会将任务平滑分配给服务器。但当服务器性能差距较大时，就无法达到预期的效果。因为此时连接数并不能准确表明处理能力，连接数小而自身性能很差的服务器可能不及连接数大而自身性能极好的服务器。所以在这个时候就会导致任务无法准确的分配到剩余处理能力强的机器上。 </p>\n</li>\n</ol>\n<h2 id=\"Feign\"><a href=\"#Feign\" class=\"headerlink\" title=\"Feign\"></a>Feign</h2><p>Feign是一个声明式的<strong>伪Http客户端</strong>，它使得写Http客户端变得更简单。</p>\n<p>使用Feign，只需要创建一个接口并注解，它具有可插拔的注解特性，可使用Feign 注解和JAX-RS注解，<strong>Feign支持可插拔的编码器和解码器</strong>，<strong>Feign默认集成了Ribbo</strong>，并和Eureka结合，<strong>默认实现了负载均衡</strong>的效果。</p>\n<p>在<strong>Feign</strong>的实现下，我们只需要创建一个接口并使用注解的方式来配置它。即可以完成对服务提供方的接口绑定，简化了使用SpringCloud Ribbon时，自动封装服务调用客户端的开发量。</p>\n<p>Feign远程调用的基本流程</p>\n<img src=\"/article/42622/1.png\" class width=\"1\">\n<p><strong>Feign 具有如下特性</strong></p>\n<ul>\n<li>可插拔的注解支持，包括Feign注解和JAX-RS注解</li>\n<li>支持可插拔的HTTP编码器和解码器</li>\n<li>支持Hystrix和它的Fallback</li>\n<li>支持Ribbon的负载均衡</li>\n<li>支持HTTP请求和响应的压缩Feign是一个声明式的Web Service客户端，它的目的就是让Web Service调用更加简单。它整合了Ribbon和Hystrix，从而不再需要显式地使用这两个组件。Feign还提供了HTTP请求的模板，通过编写简单的接口和注解，就可以定义好HTTP请求的参数、格式、地址等信息。接下来，Feign会完全代理HTTP的请求，我们只需要像调用方法一样调用它就可以完成服务请求。</li>\n</ul>\n<h2 id=\"Hystrix\"><a href=\"#Hystrix\" class=\"headerlink\" title=\"Hystrix\"></a>Hystrix</h2><p>在微服务架构中，根据业务来拆分成一个个的服务，服务与服务之间可以相互调用（RPC），在SpringCloud可以用RestTemplate+Ribbon和Feign来调用。</p>\n<p>由于网络原因或者自身的原因，服务并不能保证100%可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。</p>\n<p>针对上述问题，在SpringCloud Hystrix中实现了线程隔离、断路器等一系列的服务保护功能。它也是基于Netflix的开源框架 Hystrix实现的，该框架目标在于通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备了<strong>服务降级、服务熔断、线程隔离、请求缓存、请求合并以及服务监控</strong>等强大功能。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">雪崩场景</th>\n<th style=\"text-align:center\">举例</th>\n<th style=\"text-align:center\">应对策略</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">硬件故障</td>\n<td style=\"text-align:center\">服务器宕机，机房断电，光纤被挖断等</td>\n<td style=\"text-align:center\">多机房容灾、异地多活等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">流量激增</td>\n<td style=\"text-align:center\">异常流量，重试加大流量等</td>\n<td style=\"text-align:center\">服务自动扩容、流量控制（限流、关闭重试）等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缓存穿透</td>\n<td style=\"text-align:center\">一般发生在应用重启，所有缓存失效时，以及短时间内大量缓存失效时。大量的缓存不命中，使请求直击后端服务，造成服务提供者超负荷运行，引起服务不可用。</td>\n<td style=\"text-align:center\">缓存预加载、缓存异步加载等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">程序BUG</td>\n<td style=\"text-align:center\">如程序逻辑导致内存泄漏，JVM长时间FullGC等。</td>\n<td style=\"text-align:center\">修改程序bug、及时释放资源等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">同步等待</td>\n<td style=\"text-align:center\">服务间采用同步调用模式，同步等待造成的资源耗尽。</td>\n<td style=\"text-align:center\">资源隔离、MQ解耦、不可用服务调用快速失败等。资源隔离通常指不同服务调用采用不同的线程池；不可用服务调用快速失败一般通过熔断器模式结合超时机制实现。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"断路器\"><a href=\"#断路器\" class=\"headerlink\" title=\"断路器\"></a>断路器</h3><p>断路器模式源于Martin Fowler的Circuit Breaker一文。“断路器”本身是一种开关装置，用于在电路上保护线路过载，当线路中有电器发生短路时，“断路器”能够及时的切断故障电路，防止发生过载、发热、甚至起火等严重后果。</p>\n<p>在分布式架构中，断路器模式的作用也是类似的，当某个服务单元发生故障（类似用电器发生短路）之后，<strong>通过断路器的故障监控（类似熔断保险丝），向调用方返回一个错误响应，而不是长时间的等待。这样就不会使得线程因调用故障服务被长时间占用不释放</strong>，避免了故障在分布式系统中的蔓延。</p>\n<h3 id=\"使用-Ribbon-Hystrix\"><a href=\"#使用-Ribbon-Hystrix\" class=\"headerlink\" title=\"使用 Ribbon Hystrix\"></a>使用 Ribbon Hystrix</h3><p><strong>服务熔断</strong></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<p>在项目<code>pom</code> 加上<code>hystrix</code>的依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- hystrix 断路器 --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在程序的启动类通过 <code>@EnableHystrix</code> 开启 <code>Hystrix</code> 断路器监控.</p>\n</li>\n<li><p><strong>消费提供者方法</strong></p>\n<ol>\n<li>新方法<code>defaultStores</code>,当出现雪崩情况，跳转到该方法</li>\n<li>修改 <code>DeptConsumerController</code> 类的，<code>list</code> 方法，加上注解<code>@HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</code></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"服务熔断与降级\"><a href=\"#服务熔断与降级\" class=\"headerlink\" title=\"服务熔断与降级\"></a>服务熔断与降级</h3><p><strong>服务熔断:作用在服务提供者</strong></p>\n<p>服务熔断的作用类似于我们家用的保险丝，当某服务出现不可用或响应超时的情况时，为了防止整个系统出现雪崩，暂时停止对该服务的调用,快速返回”错误”的响应信息。当检测到该节点微服务响应正常后恢复调用链路.</p>\n<p><strong>服务降级：作用在消费者</strong></p>\n<p><strong>服务降级处理是在客户端实现完成的，与服务端没有关系</strong></p>\n<p>服务降级是从整个系统的负荷情况出发和考虑的，对某些负荷会比较高的情况，为了预防某些功能（业务场景）出现负荷过载或者响应慢的情况，在其内部暂时舍弃对一些非核心的接口和数据的请求，而直接返回一个提前准备好的fallback（退路）错误处理信息。这样，虽然提供的是一个有损的服务，但却保证了整个系统的稳定性和可用性。\\</p>\n<p><strong>相同点</strong></p>\n<p>目标一致 都是从可用性和可靠性出发，为了防止系统崩溃；</p>\n<p>用户体验类似 最终都让用户体验到的是某些功能暂时不可用；</p>\n<p><strong>不同点</strong></p>\n<p>触发原因不同 服务熔断一般是某个服务（下游服务）故障引起，而服务降级一般是从整体负荷考虑； </p>\n<h2 id=\"zuul\"><a href=\"#zuul\" class=\"headerlink\" title=\"zuul\"></a>zuul</h2><p>务网关是微服务架构中一个不可或缺的部分。通过服务网关统一向外系统提供<code>REST API</code>的过程中，除了具备<strong>服务路由、均衡负载功能</strong>之外，它还具备了<strong>权限控制</strong>等功能。<code>Spring Cloud</code> <code>Netflix</code>中的Zuul就担任了这样的一个角色，为微服务架构提供了前门保护的作用，同时将权限控制这些较重的非业务逻辑内容迁移到服务路由层面，使得服务集群主体能够具备更高的可复用性和可测试性。</p>\n<p>路由在微服务体系结构的一个组成部分。例如，/可以映射到您的Web应用程序，<code>/api/users</code>映射到用户服务，并将<code>/api/shop</code>映射到商店服务。<code>Zuul</code>是<code>Netflix</code>的基于<code>JVM</code>的路由器和服务器端负载均衡器。</p>\n<h3 id=\"什么是服务网关\"><a href=\"#什么是服务网关\" class=\"headerlink\" title=\"什么是服务网关\"></a>什么是服务网关</h3><p><strong>服务网关 = 路由转发 + 过滤器</strong></p>\n<ol>\n<li><p>路由转发：接收一切外界请求，转发到后端的微服务上去；</p>\n</li>\n<li><p>过滤器：在服务网关中可以完成一系列的横切功能，例如权限校验、限流以及监控等，这些都可以通过过滤器完成（其实路由转发也是通过过滤器实现的）。</p>\n</li>\n</ol>\n<h3 id=\"为什么需要服务网关\"><a href=\"#为什么需要服务网关\" class=\"headerlink\" title=\"为什么需要服务网关\"></a>为什么需要服务网关</h3><p>上述所说的横切功能（以权限校验为例）可以写在三个位置：</p>\n<ul>\n<li>每个服务自己实现一遍</li>\n<li>写到一个公共的服务中，然后其他所有服务都依赖这个服务</li>\n<li>写到服务网关的前置过滤器中，所有请求过来进行权限校验</li>\n</ul>\n<p><strong>第一种，缺点太明显，基本不用；</strong> </p>\n<p><strong>第二种，相较于第一点好很多，代码开发不会冗余，但是有两个缺点：</strong></p>\n<ul>\n<li>由于每个服务引入了这个公共服务，那么相当于在每个服务中都引入了相同的权限校验的代码，使得每个服务的jar包大小无故增加了一些，尤其是对于使用docker镜像进行部署的场景，jar越小越好；</li>\n<li>由于每个服务都引入了这个公共服务，那么我们后续升级这个服务可能就比较困难，而且公共服务的功能越多，升级就越难，而且假设我们改变了公共服务中的权限校验的方式，想让所有的服务都去使用新的权限校验方式，我们就需要将之前所有的服务都重新引包，编译部署。</li>\n</ul>\n<p><strong>而服务网关恰好可以解决这样的问题：</strong></p>\n<ul>\n<li>将权限校验的逻辑写在网关的过滤器中，后端服务不需要关注权限校验的代码，所以服务的jar包中也不会引入权限校验的逻辑，不会增加jar包大小；</li>\n<li>如果想修改权限校验的逻辑，只需要修改网关中的权限校验过滤器即可，而不需要升级所有已存在的微服务。</li>\n</ul>\n<h3 id=\"简单使用\"><a href=\"#简单使用\" class=\"headerlink\" title=\"简单使用\"></a>简单使用</h3><p><strong>新建项目</strong> <code>spring-cloud-zuul-service</code></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ZuulApplication</code> 通过 <code>@EnableZuulProxy</code> 开启 Zuul 服务网关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;<br><span class=\"hljs-meta\">@EnableZuulProxy</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ZuulApplication</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ZuulApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">springboot-zuul</span><br><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">9527</span><br><span class=\"hljs-attr\">eureka:</span> <br>\t<span class=\"hljs-attr\">client:</span><br>\t\t<span class=\"hljs-attr\">service-url:</span> <br>\t\t\t<span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7001.com:7001/eureka/,</span> <span class=\"hljs-string\">,http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br><span class=\"hljs-attr\">instance:</span><br>\t<span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">zuul9527.com</span><br>\t<br><span class=\"hljs-attr\">zuul:</span><br>  <span class=\"hljs-attr\">routes:</span><br>  \t<span class=\"hljs-attr\">mydept.serverId:</span> <span class=\"hljs-string\">springcloud-provider-dept</span><br>  \t<span class=\"hljs-attr\">mydept.path:</span> <span class=\"hljs-string\">/mydept/**</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"SpringCloud-Config\"><a href=\"#SpringCloud-Config\" class=\"headerlink\" title=\"SpringCloud Config\"></a>SpringCloud Config</h2><p>在分布式系统中，由于服务数量巨多，为了方便服务配置文件统一管理，实时更新，所以需要分布式配置中心组件。在SpringCloud中，有分布式配置中心组件<strong>pringloud Config</strong>，它支持配置服务放在配置服务的内存中（即本地），也支持放在远程Git仓库中。在spring cloud config 组件中，分两个角色，一是<strong>config server</strong>，二是<strong>config client</strong>。</p>\n<p><strong>SpringCloud Config</strong>就是我们通常意义上的配置中心，把应用原本放在本地文件的配置抽取出来放在中心服务器，从而能够提供更好的管理、发布能力。SpringCloud Config分服务端和客户端，<strong>服务端</strong>负责将<strong>git svn</strong>中存储的配置文件发布成<strong>REST接口</strong>，<strong>客户端</strong>可以从<strong>服务端REST接口</strong>获取配置。但客户端并不能主动感知到配置的变化，从而主动去获取新的配置，这需要每个客户端通过<strong>POST</strong>方法触发各自的<code>/refresh</code>。</p>\n<p><strong>SpringCloud Bus</strong>通过一个<strong>轻量级消息代理连接分布式系统的节点</strong>。这可以用于广播状态更改（如配置更改）或其他管理指令。SpringCloudBus提供了通过<strong>POST</strong>方法访问的<code>endpoint/bus/refresh</code>，这个接口通常由<strong>git</strong>的钩子功能调用，用以通知各个SpringCloud Config的客户端去服务端更新配置。</p>\n<h3 id=\"服务端配置-Config-Server\"><a href=\"#服务端配置-Config-Server\" class=\"headerlink\" title=\"服务端配置 Config Server\"></a>服务端配置 Config Server</h3><ol>\n<li><p><strong>新建项目</strong> spring-cloud-config-server</p>\n</li>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-config-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>\t<span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">3344</span><br><span class=\"hljs-attr\">spring:</span><br>\t<span class=\"hljs-attr\">application:</span><br>\t\t<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">config-server</span><br>\t<span class=\"hljs-attr\">cloud:</span><br>\t\t<span class=\"hljs-attr\">config:</span> <br>\t\t\t<span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">main</span><br>\t\t\t<span class=\"hljs-attr\">server:</span><br>\t\t\t\t<span class=\"hljs-attr\">git:</span> <br>\t\t\t\t\t<span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">git仓库HTTPS地址</span><br>\t\t\t\t\t<span class=\"hljs-attr\">search-paths:</span>\t<span class=\"hljs-string\">spring-cloud-config</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>spring.cloud.config.server.git.uri：配置git仓库地址</li>\n<li>spring.cloud.config.server.git.searchPaths：配置仓库路径</li>\n<li>spring.cloud.config.label：配置仓库的分支</li>\n</ul>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ConfigServerApplication</code> 通过 <code>@EnableConfigServer</code> 开启 SpringCloud Config 服务端 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.config.server.EnableConfigServer;<br><span class=\"hljs-meta\">@EnableConfigServer</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigServerApplication</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ConfigServerApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"客户端配置-Config-Client\"><a href=\"#客户端配置-Config-Client\" class=\"headerlink\" title=\"客户端配置  Config Client\"></a>客户端配置  Config Client</h3><ol>\n<li><p><strong>新建项目</strong> spring-cloud-config-client</p>\n</li>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-config-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>\t<span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8088</span><br><span class=\"hljs-attr\">spring:</span><br>\t<span class=\"hljs-attr\">application:</span><br>\t\t<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">config-client</span><br>\t<span class=\"hljs-attr\">cloud:</span><br>\t\t<span class=\"hljs-attr\">config:</span><br>\t\t\t<span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">mian</span><br>\t\t\t<span class=\"hljs-attr\">profile:</span> <span class=\"hljs-string\">dev</span><br>\t\t\t<span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">http://localhost:3344/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ConfigClientApplication</code> 通过 <code>@Value</code> 获取服务端的 <code>content</code> 值的内容</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.controller;<br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigClientApplication</span> </span>&#123;<br>  <span class=\"hljs-meta\">@Value(&quot;$&#123;content&#125;&quot;)</span><br>  String content;<br>  <span class=\"hljs-meta\">@RequestMapping(&quot;/&quot;)</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">home</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;content:&quot;</span> + content;<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ConfigClientApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n","more":"<blockquote>\n<p>You are the big drop of dew under the lotus leaf, I am the smaller one on its upper side,” said the dewdrop to the lake.</p>\n<p>露珠对湖水说道；“你是在荷叶下面的大露珠，我是在荷叶上面的较小的露<br>珠。”　</p>\n</blockquote>\n<h2 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h2><p><a href=\"https://www.springcloud.cc\">SpringCloud中文网</a></p>\n<p><a href=\"https://spring.io/projects/spring-cloud\">SpringCloud官网</a></p>\n<p>SpringCloud是一个基于SpringBoot实现的云应用开发工具，它为基于JVM的云应用开发中涉及<strong>的配置管理、服务发现、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理</strong>等操作提供了一种简单的开发方式。</p>\n<p><strong>微服务架构</strong></p>\n<p>微服务(Microservices Architecture)是一种架构风格，一个大型复杂软件应用由一个或多个微服务组成。系统中的各个微服务可被独立部署，各个微服务之间是松耦合的。每个微服务仅关注于完成一件任务并很好地完成该任务。在所有情况下，每个任务代表着一个小的业务能力。</p>\n<p>微服务架构的<strong>核心思想</strong>是，一个应用是由多个小的、相互独立的、微服务组成，这些服务运行在自己的进程中，开发和发布都没有依赖。不同服务通过一些<strong>轻量级交互机制来通信</strong>，例如 RPC、HTTP 等，服务可独立扩展伸缩，每个服务定义了明确的边界，不同的服务甚至可以采用不同的编程语言来实现，由独立的团队来维护。简单的来说，一个系统的不同模块转变成不同的服务！而且服务可以使用不同的技术加以实现！</p>\n<h3 id=\"学习环境搭建\"><a href=\"#学习环境搭建\" class=\"headerlink\" title=\"学习环境搭建\"></a>学习环境搭建</h3><img src=\"/article/42622/image-20220223124010573.png\" class title=\"image-20220223124010573\">\n<p><code>父项目pom.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">properties</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">project.build.sourceEncoding</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.source</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span>8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maven.compiler.target</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">junit.version</span>&gt;</span>4.13.1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">junit.version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">lombok.version</span>&gt;</span>1.18.20<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">lombok.version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">log4j.version</span>&gt;</span>1.2.12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">log4j.version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">properties</span>&gt;</span><br><br><span class=\"hljs-comment\">&lt;!--打包方式--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">packaging</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">packaging</span>&gt;</span><br><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--Springcloud依赖--&gt;</span><br>    <span class=\"hljs-comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies --&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2020.0.2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--springboot--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.5.7<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">type</span>&gt;</span>pom<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">type</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">scope</span>&gt;</span>import<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">scope</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--连接数据库--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>8.0.27<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--数据源--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>druid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--springboot启动器--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.2.0<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--日志测试--&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--log4j--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;junit.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.projectlombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>lombok<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;lombok.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-comment\">&lt;!--log4j--&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>log4j<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>log4j<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>$&#123;log4j.version&#125;<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>ch.qos.logback<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>logback-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.2.7<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencyManagement</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"SpringCloud-api\"><a href=\"#SpringCloud-api\" class=\"headerlink\" title=\"SpringCloud-api\"></a>SpringCloud-api</h4><img src=\"/article/42622/image-20220223124034883.png\" class title=\"image-20220223124034883\">\n<p>配置SpringCloud-api，pom环境引入父项目依赖，构建实体类。</p>\n<h4 id=\"springcloud-provider-dept-8001\"><a href=\"#springcloud-provider-dept-8001\" class=\"headerlink\" title=\"springcloud-provider-dept-8001\"></a>springcloud-provider-dept-8001</h4><img src=\"/article/42622/image-20220223124230419.png\" class title=\"image-20220223124230419\">\n<p>构建服务者，springcloud-provider-dept-8001</p>\n<p>配置服务者<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8001</span><br><br><span class=\"hljs-comment\">#mybatis配置</span><br><span class=\"hljs-attr\">mybatis:</span><br>  <span class=\"hljs-attr\">type-aliases-package:</span> <span class=\"hljs-string\">com.bobo.springcloud.pojo</span><br>  <span class=\"hljs-attr\">config-location:</span> <span class=\"hljs-string\">classpath:mybatis/mybatis-config.xml</span><br>  <span class=\"hljs-attr\">mapper-locations:</span> <span class=\"hljs-string\">classpath:mybatis/mapper/*.xml</span><br><br><span class=\"hljs-comment\">#spring配置</span><br><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">springcloud-provider-dept</span><br>  <span class=\"hljs-attr\">datasource:</span><br>    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">com.alibaba.druid.pool.DruidDataSource</span>  <span class=\"hljs-comment\">#数据源</span><br>    <span class=\"hljs-attr\">driver-class-name:</span> <span class=\"hljs-string\">com.mysql.cj.jdbc.Driver</span><br>    <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">jdbc:mysql://localhost:3306/(api实体类对应数据库名)?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;allowPublicKeyRetrieval=true</span><br>    <span class=\"hljs-attr\">password:</span> <span class=\"hljs-string\">密码</span><br>    <span class=\"hljs-attr\">username:</span> <span class=\"hljs-string\">用户名</span><br></code></pre></td></tr></table></figure>\n<p>配置<code>pom.xml</code>版本号依赖于父项目</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--添加监控信息--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>2.4.6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>  <span class=\"hljs-comment\">&lt;!--我们需要拿到实体类  索要配置api module--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.bobo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springcloud-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>junit<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>mysql<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>druid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>ch.qos.logback<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>logback-core<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--test--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-test<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--web--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--jetty--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!--热部署--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h4 id=\"springcloud-consumer-dept-80\"><a href=\"#springcloud-consumer-dept-80\" class=\"headerlink\" title=\"springcloud-consumer-dept-80\"></a>springcloud-consumer-dept-80</h4><img src=\"/article/42622/image-20220223124558372.png\" class title=\"image-20220223124558372\">\n<p>构建消费者，springcloud-consumer-dept-80</p>\n<p>配置消费者<code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br></code></pre></td></tr></table></figure>\n<p>配置<code>pom.xml</code>版本号依赖于父项目</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependencies</span>&gt;</span>  <br>  <span class=\"hljs-comment\">&lt;!--实体类+web--&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.bobo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>springcloud-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"SpringCloud-Eureka\"><a href=\"#SpringCloud-Eureka\" class=\"headerlink\" title=\"SpringCloud Eureka\"></a>SpringCloud Eureka</h2><p><strong>SpringCloud Eureka来实现服务治理</strong></p>\n<p>SpringCloud Eureka是SpringCloud Netflix项目下的服务治理模块。而SpringCloud Netflix项目是SpringCloud的子项目之一，主要内容是对Netflix公司一系列开源产品的包装，它为SpringBoot应用提供了自配置的Netflix OSS整合。通过一些简单的注解，开发者就可以快速的在应用中配置一下常用模块并构建庞大的分布式系统。</p>\n<p>它主要提供的模块包括：<strong>服务发现（Eureka），断路器（Hystrix），智能路由（Zuul），客户端负载均衡（Ribbon）</strong>等。</p>\n<h3 id=\"EurekaServer\"><a href=\"#EurekaServer\" class=\"headerlink\" title=\"EurekaServer\"></a>EurekaServer</h3><p><strong>提供服务注册和发现  springcloud-eureka-7002</strong></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<p>在项目 <code>pom.xml</code>中引入需要的依赖内容</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>在默认设置下，该服务注册中心也会将自己作为客户端来尝试注册它自己，所以我们需要禁用它的客户端注册行为，只需要在<code>application.yml</code>配置文件中增加如下信息：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#配置端口号</span><br><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7001</span><br><br><span class=\"hljs-comment\">#Eureka</span><br><span class=\"hljs-attr\">eureka:</span><br>\t<span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">localhost</span>   <span class=\"hljs-comment\">#Eureka服务端的实例名称</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>   <span class=\"hljs-comment\">#表示是否向eureka服务中心注册自己</span><br>    <span class=\"hljs-attr\">fetch-registry:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#如果为false则表示自己为注册中心</span><br>    <span class=\"hljs-attr\">service-url:</span><br>    \t<span class=\"hljs-comment\">#监控页面</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"29.333ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 12629.6 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">{eureka.instance.hostname}:</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-75\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6B\" d=\"M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-61\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-68\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6D\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-75\" x=\"466\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"1039\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"1490\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6B\" x=\"1957\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"2478\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-2E\" x=\"3008\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"3453\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"3798\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"4399\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"4868\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"5230\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"5759\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"6360\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"6793\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-2E\" x=\"7260\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-68\" x=\"7705\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"8281\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"8767\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"9236\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"9598\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"10198\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6D\" x=\"10728\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"11606\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-3A\" x=\"12351\" y=\"0\"/>\n</g>\n</svg>&#123;server.port&#125;/eureka/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>通过 <code>@EnableEurekaServer</code> 注解启动一个服务注册中心提供给其他应用进行对话,这个注解需要在SpringBoot工程的主启动类上加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;<br><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaServer</span>   <span class=\"hljs-comment\">//EnableEurekaServer服务端的启动类，可以接受别人注册进来</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">EurekaServer_7001</span> </span>&#123;<br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>        SpringApplication.run(EurekaServer_7001.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>访问服务</strong></p>\n<p>启动工程后，访问：<a href=\"http://localhost:7001/\">http://localhost:7001/</a></p>\n</li>\n</ol>\n<h3 id=\"Service-Provider\"><a href=\"#Service-Provider\" class=\"headerlink\" title=\"Service Provider\"></a>Service Provider</h3><p>服务提供方:将自身服务注册到 Eureka 注册中心，从而使服务消费方能够找到</p>\n<ol>\n<li><p><strong>添加依赖<code>pom.xml</code></strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong><code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#Eureka的配置  服务注册到哪里</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://localhost:7001/eureka/</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">springcloud-provider-dept8001</span>   <span class=\"hljs-comment\">#修改Eureka 的默认描述信息</span><br><br><span class=\"hljs-comment\">#info配置</span><br><span class=\"hljs-attr\">info:</span><br>  <span class=\"hljs-attr\">app.name:</span> <span class=\"hljs-string\">bobo-springcloud</span><br>  <span class=\"hljs-attr\">company.name:</span> <span class=\"hljs-string\">bobo666</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在应用主类中通过加上 <code>@EnableEurekaClient</code>，但只有 Eureka 可用.</p>\n<p>也可以使用@EnableDiscoveryClient,需要配置才能找到Eureka注册中心服务器。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaClient</span>   <span class=\"hljs-comment\">//自动在服务启动后自动注册到Eureka中</span><br><span class=\"hljs-meta\">@EnableDiscoveryClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptProvider_8001</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(DeptProvider_8001.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>访问服务</strong></p>\n<p>启动该工程后，再次访问启动工程：<a href=\"http://localhost:7001/\">http://localhost:7001/</a></p>\n</li>\n</ol>\n<h3 id=\"多集群模拟\"><a href=\"#多集群模拟\" class=\"headerlink\" title=\"多集群模拟\"></a>多集群模拟</h3><img src=\"/article/42622/image-20220224090112639.png\" class title=\"image-20220224090112639\">\n<p><strong>如果一台主机试验，修改host文件</strong></p>\n<p>注释默认映射，添加映射</p>\n<img src=\"/article/42622/image-20220224090049462.png\" class title=\"image-20220224090049462\">\n<p>分别修改每个项目下<code>application.yam</code>文件，以7001为例</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">7001</span><br><br><span class=\"hljs-comment\">#Eureka</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">hostname:</span> <span class=\"hljs-string\">eureka7001.com</span>   <span class=\"hljs-comment\">#Eureka服务端的实例名称</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>   <span class=\"hljs-comment\">#表示是否向eureka服务中心注册自己</span><br>    <span class=\"hljs-attr\">fetch-registry:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#如果为false则表示自己为注册中心</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br></code></pre></td></tr></table></figure>\n<p>修改<strong>服务提供方</strong><code>application.yam</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\">#Eureka的配置  服务注册到哪里</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/</span><br>  <span class=\"hljs-attr\">instance:</span><br>    <span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">springcloud-provider-dept8001</span>   <span class=\"hljs-comment\">#修改Eureka 的默认描述信息</span><br><br><span class=\"hljs-comment\">#info配置</span><br><span class=\"hljs-attr\">info:</span><br>  <span class=\"hljs-attr\">app.name:</span> <span class=\"hljs-string\">bobo-springcloud</span><br>  <span class=\"hljs-attr\">company.name:</span> <span class=\"hljs-string\">bobo666</span><br></code></pre></td></tr></table></figure>\n<p>启动<strong>7001、7002、7003</strong>项目</p>\n<p>以7001为例</p>\n<img src=\"/article/42622/image-20220224090644886.png\" class title=\"image-20220224090644886\">\n<p>启动<strong>8001服务提供者</strong>项目</p>\n<img src=\"/article/42622/image-20220224090950094.png\" class title=\"image-20220224090950094\">\n<h3 id=\"Eureka与Zookeeper的区别\"><a href=\"#Eureka与Zookeeper的区别\" class=\"headerlink\" title=\"Eureka与Zookeeper的区别\"></a>Eureka与Zookeeper的区别</h3><p>CAP理论指出，一个分布式系统不可能同时满足C(一致性)、A(可用性)和P(分区容错性)。由于<strong>分区容错性P在是分布式系统中必须要保证</strong>的，因此我们只能在A和C之间进行权衡。<br><strong>Zookeeper保证CP</strong><br>Zookeeper 为主从结构，有leader节点和follow节点。当leader节点down掉之后，剩余节点会重新进行选举。选举过程中会导致服务不可用，丢掉了可用行。<br><strong>Eureka保证AP</strong><br>Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。</p>\n<blockquote>\n<p><strong>为什么CAP只能达到 CP 或者 AP？</strong></p>\n<p>由以上我们得知，P是必然存在的。<br>如果我们保证了CP，即一致性与分布容错。当我们通过一个服务器修改数据后，该服务器会向另一个服务器发送请求，将数据进行同步，但此时，该数据应处于锁定状态，不可再次修改，这样，如果此时我们想服务器发送请求，则得不到相应，这样就不能A，高可用。<br>如果我们保证了AP，那么我们不能对服务器进行锁定，任何时候都要得到相应，那么数据的一致性就不好说了。</p>\n</blockquote>\n<h3 id=\"Eureka自我保护机制\"><a href=\"#Eureka自我保护机制\" class=\"headerlink\" title=\"Eureka自我保护机制\"></a>Eureka自我保护机制</h3><p>在默认配置中Eureka Server服务在一定时间（<strong>默认为90秒</strong>）没接受到某个服务的心跳连接后，Eureka Server会注销该服务。但是会存在当网络分区发生故障，导致该时间内没有心跳连接，但该服务本身还是健康运行的情况。Eureka通过“自我保护模式”来解决这个问题。</p>\n<ol>\n<li><p>在自我保护模式中，Eureka Server会保护服务注册表中的信息，不再注销任何服务实例。当他收到的心跳数重新恢复到阈值以上时，该Eureka Server节点会自动退出自我保护模式。</p>\n</li>\n<li><p>在自我保护模式下，Eureka Server 仍然能够接受新服务的注册和查询请求，但是不会被同步到其他节点上（即保证当前节点依然可用。）</p>\n</li>\n<li>当网络稳定时，当前实例新的注册信息会被同步到其他节点中</li>\n</ol>\n<h2 id=\"Ribbon\"><a href=\"#Ribbon\" class=\"headerlink\" title=\"Ribbon\"></a>Ribbon</h2><p>SpringCloud Ribbon是基于Netflix Ribbon实现的一套<strong>客户端负载均衡</strong>的工具。它是一个基于HTTP和TCP的客户端负载均衡器。它可以通过在客户端中配置ribbonServerList来设置服务端列表去轮询访问以达到均衡负载的作用。</p>\n<p>Ribbon是Netflix发布的开源项目，主要功能是提供客户端的<strong>软件负载均衡算法</strong>，将Netflix的中间层服务连接在一起。Ribbon客户端组件提供一系列完善的配置项如连接超时，重试等。简单的说，就是在配置文件中列出Load Balancer（简称LB）后面所有的机器，Ribbon会自动的帮助你基于某种规则（如简单轮询，随即连接等）去连接这些机器。我们也很容易使用Ribbon实现自定义的负载均衡算法。</p>\n<h3 id=\"LB方案\"><a href=\"#LB方案\" class=\"headerlink\" title=\"LB方案\"></a>LB方案</h3><p>负载均衡，英文名称为Load Balance，其含义就是指将负载（工作任务）进行平衡、分摊到多个操作单元上进行运行，例如FTP服务器、Web服务器、企业核心应用服务器和其它主要任务服务器等，从而协同完成工作任务。</p>\n<p>负载均衡构建在原有网络结构之上，它提供了一种透明且廉价有效的方法扩展服务器和网络设备的带宽、加强网络数据处理能力、增加吞吐量、提高网络的可用性和灵活性。</p>\n<p><strong>集中式LB</strong>, 即在服务的消费方和提供方之间使用独立的LB设施(可以是硬件，如F5, 也可以是软件，如nginx), 由该设施负责把访问请求通过某种策略转发至服务的提供方；</p>\n<p><strong>进程内LB</strong>，将LB逻辑集成到消费方，消费方从服务注册中心获知有哪些地址可用，然后自己再从这些地址中选择出一个合适的服务器。<strong>Ribbon就属于进程内LB</strong>，它只是一个类库，集成于消费方进程，消费方通过它来获取到服务提供方的地址。</p>\n<h3 id=\"集群模拟\"><a href=\"#集群模拟\" class=\"headerlink\" title=\"集群模拟\"></a>集群模拟</h3><p><strong>Ribbon Consumer</strong></p>\n<p><strong>服务消费者</strong></p>\n<ol>\n<li><p><strong>添加依赖 <code>pom.xml</code></strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!--Ribbon负载均衡--&gt;</span><br><span class=\"hljs-comment\">&lt;!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-ribbon --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-comment\">&lt;!--erueka--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">80</span><br><br><span class=\"hljs-comment\">#eureka配置</span><br><span class=\"hljs-attr\">eureka:</span><br>  <span class=\"hljs-attr\">client:</span><br>    <span class=\"hljs-attr\">register-with-eureka:</span> <span class=\"hljs-literal\">false</span>  <span class=\"hljs-comment\">#不向eureka注册自己</span><br>    <span class=\"hljs-attr\">service-url:</span><br>      <span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务负载均衡</strong></p>\n<p>在工程的启动类中,通过<code>@EnableEurekaClient</code>向服务注册中心注册；并且向程序的<code>ioc</code>注入一个<code>bean: restTemplate</code>并通过<code>@LoadBalanced</code>注解表明这个<code>restTemplate</code>开启负载均衡的功能。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;<br><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-meta\">@EnableEurekaClient</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptConsumer_80</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(DeptConsumer_80.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.config;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Bean;<br><span class=\"hljs-keyword\">import</span> org.springframework.context.annotation.Configuration;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.client.RestTemplate;<br><br><span class=\"hljs-meta\">@Configuration</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigBean</span> </span>&#123;   <span class=\"hljs-comment\">//@Configuration   ----spring applicationContext.xml</span><br><br>  <span class=\"hljs-comment\">//配置负载均衡实现  RestTemplate</span><br>  <span class=\"hljs-meta\">@Bean</span><br>  <span class=\"hljs-meta\">@LoadBalanced</span>  <span class=\"hljs-comment\">//Ribbon</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> RestTemplate <span class=\"hljs-title\">getRestTemplate</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> RestTemplate();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>消费提供者方法</strong></p>\n<p>在<code>Controller</code> 类中，调用提供者的 <code>home</code> 方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.controller;<br><span class=\"hljs-keyword\">import</span> com.bobo.springcloud.pojo.Dept;<br><span class=\"hljs-keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class=\"hljs-keyword\">import</span> org.springframework.stereotype.Controller;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.PathVariable;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.bind.annotation.RestController;<br><span class=\"hljs-keyword\">import</span> org.springframework.web.client.RestTemplate;<br><span class=\"hljs-keyword\">import</span> java.util.List;<br><br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">DeptConsumerController</span> </span>&#123;<br>  <span class=\"hljs-comment\">//理解 消费者不应该有service层</span><br>  <span class=\"hljs-comment\">//RestTemplate</span><br>  <span class=\"hljs-comment\">//提供多种便捷访问远程http服务的方法，是一种简单的restful服务模版</span><br>  <span class=\"hljs-meta\">@Autowired</span><br>  <span class=\"hljs-keyword\">private</span> RestTemplate restTemplate;<br><br>  <span class=\"hljs-comment\">//Ribbon 这里的地址 应该是一个变量，通过服务名来访问</span><br>  <span class=\"hljs-comment\">//private static final String REST_URL_PREFIX = &quot;http://localhost:8001&quot;;</span><br>  <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String REST_URL_PREFIX = <span class=\"hljs-string\">&quot;http://SPRINGCLOUD-PROVIDER-DEPT&quot;</span>;<br><br>  <span class=\"hljs-meta\">@RequestMapping(&quot;/consumer/dept/list&quot;)</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> List&lt;Dept&gt; <span class=\"hljs-title\">list</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> restTemplate.getForObject(REST_URL_PREFIX + <span class=\"hljs-string\">&quot;/dept/deptlist&quot;</span>, List.class);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>负载均衡</strong></p>\n<p>访问<a href=\"http://localhost/consumer/dept/list`，发现Ribbon已经实现负载均衡\">http://localhost/consumer/dept/list`，发现Ribbon已经实现负载均衡</a></p>\n</li>\n</ol>\n<h3 id=\"负载均衡算法\"><a href=\"#负载均衡算法\" class=\"headerlink\" title=\"负载均衡算法\"></a>负载均衡算法</h3><ol>\n<li><p>轮询法</p>\n<p>轮询法，就是将用户的请求轮流分配给服务器，就像是挨个数数，轮流分配。这种算法比较简单，他具有绝对均衡的优点，但是也正是因为绝对均衡它必须付出很大的代价，例如它无法保证分配任务的合理性，无法根据服务器承受能力来分配任务。</p>\n</li>\n<li><p>随机法</p>\n<p>随机法，是随机选择一台服务器来分配任务。它保证了请求的分散性达到了均衡的目的。同时它是没有状态的不需要维持上次的选择状态和均衡因子。但是随着任务量的增大，它的效果趋向轮询后也会具有轮询算法的部分缺点。</p>\n</li>\n<li><p>最小连接法</p>\n<p>最小连接法，将任务分配给此时具有最小连接数的节点，因此它是动态负载均衡算法。一个节点收到一个任务后连接数就会加1，当节点故障时就将节点权值设置为0，不再给节点分配任务。</p>\n<p>最小连接法适用于各个节点处理的性能相似时。任务分发单元会将任务平滑分配给服务器。但当服务器性能差距较大时，就无法达到预期的效果。因为此时连接数并不能准确表明处理能力，连接数小而自身性能很差的服务器可能不及连接数大而自身性能极好的服务器。所以在这个时候就会导致任务无法准确的分配到剩余处理能力强的机器上。 </p>\n</li>\n</ol>\n<h2 id=\"Feign\"><a href=\"#Feign\" class=\"headerlink\" title=\"Feign\"></a>Feign</h2><p>Feign是一个声明式的<strong>伪Http客户端</strong>，它使得写Http客户端变得更简单。</p>\n<p>使用Feign，只需要创建一个接口并注解，它具有可插拔的注解特性，可使用Feign 注解和JAX-RS注解，<strong>Feign支持可插拔的编码器和解码器</strong>，<strong>Feign默认集成了Ribbo</strong>，并和Eureka结合，<strong>默认实现了负载均衡</strong>的效果。</p>\n<p>在<strong>Feign</strong>的实现下，我们只需要创建一个接口并使用注解的方式来配置它。即可以完成对服务提供方的接口绑定，简化了使用SpringCloud Ribbon时，自动封装服务调用客户端的开发量。</p>\n<p>Feign远程调用的基本流程</p>\n<img src=\"/article/42622/1.png\" class width=\"1\">\n<p><strong>Feign 具有如下特性</strong></p>\n<ul>\n<li>可插拔的注解支持，包括Feign注解和JAX-RS注解</li>\n<li>支持可插拔的HTTP编码器和解码器</li>\n<li>支持Hystrix和它的Fallback</li>\n<li>支持Ribbon的负载均衡</li>\n<li>支持HTTP请求和响应的压缩Feign是一个声明式的Web Service客户端，它的目的就是让Web Service调用更加简单。它整合了Ribbon和Hystrix，从而不再需要显式地使用这两个组件。Feign还提供了HTTP请求的模板，通过编写简单的接口和注解，就可以定义好HTTP请求的参数、格式、地址等信息。接下来，Feign会完全代理HTTP的请求，我们只需要像调用方法一样调用它就可以完成服务请求。</li>\n</ul>\n<h2 id=\"Hystrix\"><a href=\"#Hystrix\" class=\"headerlink\" title=\"Hystrix\"></a>Hystrix</h2><p>在微服务架构中，根据业务来拆分成一个个的服务，服务与服务之间可以相互调用（RPC），在SpringCloud可以用RestTemplate+Ribbon和Feign来调用。</p>\n<p>由于网络原因或者自身的原因，服务并不能保证100%可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，Servlet容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的“雪崩”效应。</p>\n<p>针对上述问题，在SpringCloud Hystrix中实现了线程隔离、断路器等一系列的服务保护功能。它也是基于Netflix的开源框架 Hystrix实现的，该框架目标在于通过控制那些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备了<strong>服务降级、服务熔断、线程隔离、请求缓存、请求合并以及服务监控</strong>等强大功能。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">雪崩场景</th>\n<th style=\"text-align:center\">举例</th>\n<th style=\"text-align:center\">应对策略</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">硬件故障</td>\n<td style=\"text-align:center\">服务器宕机，机房断电，光纤被挖断等</td>\n<td style=\"text-align:center\">多机房容灾、异地多活等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">流量激增</td>\n<td style=\"text-align:center\">异常流量，重试加大流量等</td>\n<td style=\"text-align:center\">服务自动扩容、流量控制（限流、关闭重试）等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缓存穿透</td>\n<td style=\"text-align:center\">一般发生在应用重启，所有缓存失效时，以及短时间内大量缓存失效时。大量的缓存不命中，使请求直击后端服务，造成服务提供者超负荷运行，引起服务不可用。</td>\n<td style=\"text-align:center\">缓存预加载、缓存异步加载等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">程序BUG</td>\n<td style=\"text-align:center\">如程序逻辑导致内存泄漏，JVM长时间FullGC等。</td>\n<td style=\"text-align:center\">修改程序bug、及时释放资源等。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">同步等待</td>\n<td style=\"text-align:center\">服务间采用同步调用模式，同步等待造成的资源耗尽。</td>\n<td style=\"text-align:center\">资源隔离、MQ解耦、不可用服务调用快速失败等。资源隔离通常指不同服务调用采用不同的线程池；不可用服务调用快速失败一般通过熔断器模式结合超时机制实现。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"断路器\"><a href=\"#断路器\" class=\"headerlink\" title=\"断路器\"></a>断路器</h3><p>断路器模式源于Martin Fowler的Circuit Breaker一文。“断路器”本身是一种开关装置，用于在电路上保护线路过载，当线路中有电器发生短路时，“断路器”能够及时的切断故障电路，防止发生过载、发热、甚至起火等严重后果。</p>\n<p>在分布式架构中，断路器模式的作用也是类似的，当某个服务单元发生故障（类似用电器发生短路）之后，<strong>通过断路器的故障监控（类似熔断保险丝），向调用方返回一个错误响应，而不是长时间的等待。这样就不会使得线程因调用故障服务被长时间占用不释放</strong>，避免了故障在分布式系统中的蔓延。</p>\n<h3 id=\"使用-Ribbon-Hystrix\"><a href=\"#使用-Ribbon-Hystrix\" class=\"headerlink\" title=\"使用 Ribbon Hystrix\"></a>使用 Ribbon Hystrix</h3><p><strong>服务熔断</strong></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<p>在项目<code>pom</code> 加上<code>hystrix</code>的依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-comment\">&lt;!-- hystrix 断路器 --&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p>在程序的启动类通过 <code>@EnableHystrix</code> 开启 <code>Hystrix</code> 断路器监控.</p>\n</li>\n<li><p><strong>消费提供者方法</strong></p>\n<ol>\n<li>新方法<code>defaultStores</code>,当出现雪崩情况，跳转到该方法</li>\n<li>修改 <code>DeptConsumerController</code> 类的，<code>list</code> 方法，加上注解<code>@HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</code></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"服务熔断与降级\"><a href=\"#服务熔断与降级\" class=\"headerlink\" title=\"服务熔断与降级\"></a>服务熔断与降级</h3><p><strong>服务熔断:作用在服务提供者</strong></p>\n<p>服务熔断的作用类似于我们家用的保险丝，当某服务出现不可用或响应超时的情况时，为了防止整个系统出现雪崩，暂时停止对该服务的调用,快速返回”错误”的响应信息。当检测到该节点微服务响应正常后恢复调用链路.</p>\n<p><strong>服务降级：作用在消费者</strong></p>\n<p><strong>服务降级处理是在客户端实现完成的，与服务端没有关系</strong></p>\n<p>服务降级是从整个系统的负荷情况出发和考虑的，对某些负荷会比较高的情况，为了预防某些功能（业务场景）出现负荷过载或者响应慢的情况，在其内部暂时舍弃对一些非核心的接口和数据的请求，而直接返回一个提前准备好的fallback（退路）错误处理信息。这样，虽然提供的是一个有损的服务，但却保证了整个系统的稳定性和可用性。\\</p>\n<p><strong>相同点</strong></p>\n<p>目标一致 都是从可用性和可靠性出发，为了防止系统崩溃；</p>\n<p>用户体验类似 最终都让用户体验到的是某些功能暂时不可用；</p>\n<p><strong>不同点</strong></p>\n<p>触发原因不同 服务熔断一般是某个服务（下游服务）故障引起，而服务降级一般是从整体负荷考虑； </p>\n<h2 id=\"zuul\"><a href=\"#zuul\" class=\"headerlink\" title=\"zuul\"></a>zuul</h2><p>务网关是微服务架构中一个不可或缺的部分。通过服务网关统一向外系统提供<code>REST API</code>的过程中，除了具备<strong>服务路由、均衡负载功能</strong>之外，它还具备了<strong>权限控制</strong>等功能。<code>Spring Cloud</code> <code>Netflix</code>中的Zuul就担任了这样的一个角色，为微服务架构提供了前门保护的作用，同时将权限控制这些较重的非业务逻辑内容迁移到服务路由层面，使得服务集群主体能够具备更高的可复用性和可测试性。</p>\n<p>路由在微服务体系结构的一个组成部分。例如，/可以映射到您的Web应用程序，<code>/api/users</code>映射到用户服务，并将<code>/api/shop</code>映射到商店服务。<code>Zuul</code>是<code>Netflix</code>的基于<code>JVM</code>的路由器和服务器端负载均衡器。</p>\n<h3 id=\"什么是服务网关\"><a href=\"#什么是服务网关\" class=\"headerlink\" title=\"什么是服务网关\"></a>什么是服务网关</h3><p><strong>服务网关 = 路由转发 + 过滤器</strong></p>\n<ol>\n<li><p>路由转发：接收一切外界请求，转发到后端的微服务上去；</p>\n</li>\n<li><p>过滤器：在服务网关中可以完成一系列的横切功能，例如权限校验、限流以及监控等，这些都可以通过过滤器完成（其实路由转发也是通过过滤器实现的）。</p>\n</li>\n</ol>\n<h3 id=\"为什么需要服务网关\"><a href=\"#为什么需要服务网关\" class=\"headerlink\" title=\"为什么需要服务网关\"></a>为什么需要服务网关</h3><p>上述所说的横切功能（以权限校验为例）可以写在三个位置：</p>\n<ul>\n<li>每个服务自己实现一遍</li>\n<li>写到一个公共的服务中，然后其他所有服务都依赖这个服务</li>\n<li>写到服务网关的前置过滤器中，所有请求过来进行权限校验</li>\n</ul>\n<p><strong>第一种，缺点太明显，基本不用；</strong> </p>\n<p><strong>第二种，相较于第一点好很多，代码开发不会冗余，但是有两个缺点：</strong></p>\n<ul>\n<li>由于每个服务引入了这个公共服务，那么相当于在每个服务中都引入了相同的权限校验的代码，使得每个服务的jar包大小无故增加了一些，尤其是对于使用docker镜像进行部署的场景，jar越小越好；</li>\n<li>由于每个服务都引入了这个公共服务，那么我们后续升级这个服务可能就比较困难，而且公共服务的功能越多，升级就越难，而且假设我们改变了公共服务中的权限校验的方式，想让所有的服务都去使用新的权限校验方式，我们就需要将之前所有的服务都重新引包，编译部署。</li>\n</ul>\n<p><strong>而服务网关恰好可以解决这样的问题：</strong></p>\n<ul>\n<li>将权限校验的逻辑写在网关的过滤器中，后端服务不需要关注权限校验的代码，所以服务的jar包中也不会引入权限校验的逻辑，不会增加jar包大小；</li>\n<li>如果想修改权限校验的逻辑，只需要修改网关中的权限校验过滤器即可，而不需要升级所有已存在的微服务。</li>\n</ul>\n<h3 id=\"简单使用\"><a href=\"#简单使用\" class=\"headerlink\" title=\"简单使用\"></a>简单使用</h3><p><strong>新建项目</strong> <code>spring-cloud-zuul-service</code></p>\n<ol>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ZuulApplication</code> 通过 <code>@EnableZuulProxy</code> 开启 Zuul 服务网关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;<br><span class=\"hljs-meta\">@EnableZuulProxy</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ZuulApplication</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ZuulApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">spring:</span><br>  <span class=\"hljs-attr\">application:</span><br>    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">springboot-zuul</span><br><span class=\"hljs-attr\">server:</span><br>  <span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">9527</span><br><span class=\"hljs-attr\">eureka:</span> <br>\t<span class=\"hljs-attr\">client:</span><br>\t\t<span class=\"hljs-attr\">service-url:</span> <br>\t\t\t<span class=\"hljs-attr\">defaultZone:</span> <span class=\"hljs-string\">http://eureka7001.com:7001/eureka/,</span> <span class=\"hljs-string\">,http://eureka7002.com:7002/eureka/,</span> <span class=\"hljs-string\">http://eureka7003.com:7003/eureka/</span><br><span class=\"hljs-attr\">instance:</span><br>\t<span class=\"hljs-attr\">instance-id:</span> <span class=\"hljs-string\">zuul9527.com</span><br>\t<br><span class=\"hljs-attr\">zuul:</span><br>  <span class=\"hljs-attr\">routes:</span><br>  \t<span class=\"hljs-attr\">mydept.serverId:</span> <span class=\"hljs-string\">springcloud-provider-dept</span><br>  \t<span class=\"hljs-attr\">mydept.path:</span> <span class=\"hljs-string\">/mydept/**</span><br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"SpringCloud-Config\"><a href=\"#SpringCloud-Config\" class=\"headerlink\" title=\"SpringCloud Config\"></a>SpringCloud Config</h2><p>在分布式系统中，由于服务数量巨多，为了方便服务配置文件统一管理，实时更新，所以需要分布式配置中心组件。在SpringCloud中，有分布式配置中心组件<strong>pringloud Config</strong>，它支持配置服务放在配置服务的内存中（即本地），也支持放在远程Git仓库中。在spring cloud config 组件中，分两个角色，一是<strong>config server</strong>，二是<strong>config client</strong>。</p>\n<p><strong>SpringCloud Config</strong>就是我们通常意义上的配置中心，把应用原本放在本地文件的配置抽取出来放在中心服务器，从而能够提供更好的管理、发布能力。SpringCloud Config分服务端和客户端，<strong>服务端</strong>负责将<strong>git svn</strong>中存储的配置文件发布成<strong>REST接口</strong>，<strong>客户端</strong>可以从<strong>服务端REST接口</strong>获取配置。但客户端并不能主动感知到配置的变化，从而主动去获取新的配置，这需要每个客户端通过<strong>POST</strong>方法触发各自的<code>/refresh</code>。</p>\n<p><strong>SpringCloud Bus</strong>通过一个<strong>轻量级消息代理连接分布式系统的节点</strong>。这可以用于广播状态更改（如配置更改）或其他管理指令。SpringCloudBus提供了通过<strong>POST</strong>方法访问的<code>endpoint/bus/refresh</code>，这个接口通常由<strong>git</strong>的钩子功能调用，用以通知各个SpringCloud Config的客户端去服务端更新配置。</p>\n<h3 id=\"服务端配置-Config-Server\"><a href=\"#服务端配置-Config-Server\" class=\"headerlink\" title=\"服务端配置 Config Server\"></a>服务端配置 Config Server</h3><ol>\n<li><p><strong>新建项目</strong> spring-cloud-config-server</p>\n</li>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-config-server<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>\t<span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">3344</span><br><span class=\"hljs-attr\">spring:</span><br>\t<span class=\"hljs-attr\">application:</span><br>\t\t<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">config-server</span><br>\t<span class=\"hljs-attr\">cloud:</span><br>\t\t<span class=\"hljs-attr\">config:</span> <br>\t\t\t<span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">main</span><br>\t\t\t<span class=\"hljs-attr\">server:</span><br>\t\t\t\t<span class=\"hljs-attr\">git:</span> <br>\t\t\t\t\t<span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">git仓库HTTPS地址</span><br>\t\t\t\t\t<span class=\"hljs-attr\">search-paths:</span>\t<span class=\"hljs-string\">spring-cloud-config</span><br></code></pre></td></tr></table></figure>\n<ul>\n<li>spring.cloud.config.server.git.uri：配置git仓库地址</li>\n<li>spring.cloud.config.server.git.searchPaths：配置仓库路径</li>\n<li>spring.cloud.config.label：配置仓库的分支</li>\n</ul>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ConfigServerApplication</code> 通过 <code>@EnableConfigServer</code> 开启 SpringCloud Config 服务端 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.SpringApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><span class=\"hljs-keyword\">import</span> org.springframework.cloud.config.server.EnableConfigServer;<br><span class=\"hljs-meta\">@EnableConfigServer</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigServerApplication</span> </span>&#123;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ConfigServerApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"客户端配置-Config-Client\"><a href=\"#客户端配置-Config-Client\" class=\"headerlink\" title=\"客户端配置  Config Client\"></a>客户端配置  Config Client</h3><ol>\n<li><p><strong>新建项目</strong> spring-cloud-config-client</p>\n</li>\n<li><p><strong>添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-cloud-config-client<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>版本号<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>添加配置</strong></p>\n<p>配置文件 <code>application.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">server:</span><br>\t<span class=\"hljs-attr\">port:</span> <span class=\"hljs-number\">8088</span><br><span class=\"hljs-attr\">spring:</span><br>\t<span class=\"hljs-attr\">application:</span><br>\t\t<span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">config-client</span><br>\t<span class=\"hljs-attr\">cloud:</span><br>\t\t<span class=\"hljs-attr\">config:</span><br>\t\t\t<span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">mian</span><br>\t\t\t<span class=\"hljs-attr\">profile:</span> <span class=\"hljs-string\">dev</span><br>\t\t\t<span class=\"hljs-attr\">uri:</span> <span class=\"hljs-string\">http://localhost:3344/</span><br></code></pre></td></tr></table></figure>\n</li>\n<li><p><strong>开启服务注册</strong></p>\n<p>在程序的启动类 <code>ConfigClientApplication</code> 通过 <code>@Value</code> 获取服务端的 <code>content</code> 值的内容</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">package</span> com.bobo.springcloud.controller;<br><span class=\"hljs-meta\">@RestController</span><br><span class=\"hljs-meta\">@SpringBootApplication</span><br><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ConfigClientApplication</span> </span>&#123;<br>  <span class=\"hljs-meta\">@Value(&quot;$&#123;content&#125;&quot;)</span><br>  String content;<br>  <span class=\"hljs-meta\">@RequestMapping(&quot;/&quot;)</span><br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">home</span><span class=\"hljs-params\">()</span> </span>&#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;content:&quot;</span> + content;<br>  &#125;<br>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>&#123;<br>    SpringApplication.run(ConfigClientApplication.class, args);<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"SpringCloud","path":"api/categories/SpringCloud.json"},{"name":"SpringCloud","path":"api/categories/SpringCloud.json"}],"tags":[{"name":"Java,SpringCloud","path":"api/tags/Java,SpringCloud.json"}]}