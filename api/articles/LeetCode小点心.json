{"title":"LeetCode小点心","slug":"LeetCode小点心","date":"2022-01-01T13:39:33.000Z","updated":"2022-01-02T14:04:29.847Z","comments":true,"path":"api/articles/LeetCode小点心.json","realPath":null,"excerpt":null,"covers":["/article/8368/20170629170103520.png"],"cover":"/images/theme/coverphoto/leetcode.png","content":"<blockquote>\n<p>在我自己的杯中，饮了我的酒吧，朋友。　　　　　　　　　　　　　　　<br>一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。　　　　　　　　　　<br>Take my wine in my own cup, friend.<br>It loses its wreath of foam when poured into that of others.</p>\n</blockquote>\n<p><a href=\"https://blog.csdn.net/syysyf99/article/details/106211336\">https://blog.csdn.net/syysyf99/article/details/106211336</a></p>\n<ol>\n<li><p>Arraylist和数组互相转换</p>\n<p>网上搜Arraylist和数组互相转换的方法时，举的例子都是String类型的</p>\n<img src=\"/article/8368/20170629170103520.png\" class title=\"img\">\n</li>\n</ol>\n<p>​    但是对于int类型如果这样写：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">ArrayList&lt;Integer&gt; a=<span class=\"hljs-keyword\">new</span> ArrayList&lt;Integer&gt;();<br><span class=\"hljs-keyword\">int</span>[] array=(<span class=\"hljs-keyword\">int</span>[])a.toArray(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[size]);<span class=\"hljs-comment\">//会报错</span><br></code></pre></td></tr></table></figure>\n<p>则会报错，这是因为int[]并不等同于Integer[]。因此如果换成Integer[]数组，则能正确运行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; list = <span class=\"hljs-keyword\">new</span> ArrayList&lt;Integer&gt;();<br>list.add(<span class=\"hljs-number\">1</span>);<br>list.add(<span class=\"hljs-number\">2</span>);<br>Integer[] array = list.toArray(<span class=\"hljs-keyword\">new</span> Integer[list.size()]);<span class=\"hljs-comment\">//能正确运行</span><br><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> element:array)&#123;<br>     System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果非得希望得到int[]的话，只能用循环赋值来得到了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">int</span>[] d = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[list.size()];<br><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;i&lt;list.size();i++)&#123;<br>    d[i] = list.get(i);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果既不想用循环，又想要得到int[]，那就只能在jdk8中使用IntStream了。 </p>\n","more":"<blockquote>\n<p>在我自己的杯中，饮了我的酒吧，朋友。　　　　　　　　　　　　　　　<br>一倒在别人的杯里，这酒的腾跳的泡沫便要消失了。　　　　　　　　　　<br>Take my wine in my own cup, friend.<br>It loses its wreath of foam when poured into that of others.</p>\n</blockquote>\n<p><a href=\"https://blog.csdn.net/syysyf99/article/details/106211336\">https://blog.csdn.net/syysyf99/article/details/106211336</a></p>\n<ol>\n<li><p>Arraylist和数组互相转换</p>\n<p>网上搜Arraylist和数组互相转换的方法时，举的例子都是String类型的</p>\n<img src=\"/article/8368/20170629170103520.png\" class title=\"img\">\n</li>\n</ol>\n<p>​    但是对于int类型如果这样写：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">ArrayList&lt;Integer&gt; a=<span class=\"hljs-keyword\">new</span> ArrayList&lt;Integer&gt;();<br><span class=\"hljs-keyword\">int</span>[] array=(<span class=\"hljs-keyword\">int</span>[])a.toArray(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[size]);<span class=\"hljs-comment\">//会报错</span><br></code></pre></td></tr></table></figure>\n<p>则会报错，这是因为int[]并不等同于Integer[]。因此如果换成Integer[]数组，则能正确运行。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\">List&lt;Integer&gt; list = <span class=\"hljs-keyword\">new</span> ArrayList&lt;Integer&gt;();<br>list.add(<span class=\"hljs-number\">1</span>);<br>list.add(<span class=\"hljs-number\">2</span>);<br>Integer[] array = list.toArray(<span class=\"hljs-keyword\">new</span> Integer[list.size()]);<span class=\"hljs-comment\">//能正确运行</span><br><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> element:array)&#123;<br>     System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果非得希望得到int[]的话，只能用循环赋值来得到了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs java\"><span class=\"hljs-keyword\">int</span>[] d = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[list.size()];<br><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">int</span> i = <span class=\"hljs-number\">0</span>;i&lt;list.size();i++)&#123;<br>    d[i] = list.get(i);<br>&#125;<br></code></pre></td></tr></table></figure>\n<p>如果既不想用循环，又想要得到int[]，那就只能在jdk8中使用IntStream了。 </p>\n","categories":[{"name":"LeetCode","path":"api/categories/LeetCode.json"}],"tags":[{"name":"LeetCode","path":"api/tags/LeetCode.json"}]}